{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","constants.ts","pages/Login.tsx","components/Card.tsx","utils/httpUtils.js","theme/colorfcns.tsx","pages/Ripples.tsx","components/DigitalizationChart.tsx","pages/Digitalization.tsx","components/DigitalizationChart2.tsx","pages/Digitalization2.tsx","components/Chart.tsx","pages/HistoricPage.tsx","components/Menu.tsx","pages/Home.tsx","pages/Ripple.tsx","components/RippleRoadDiagram.tsx","pages/RippleDiagram.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/logoNRM.png","assets/video/loopWaves.webm"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","COMMAND","Operator","TextType","CONFIG","Storage","Plugins","LoginPage","props","event","updateUserName","setState","username","detail","value","updatePassword","password","updateEmail","email","toggleAction","state","action","login","url","credentials","setObject","fetch","method","headers","body","JSON","stringify","res","status","json","result","localStorage","setItem","accessToken","refreshToken","CustomEvent","window","dispatchEvent","history","replace","error","console","toastMessage","toString","toastState","this","clearCredentials","listen","location","pathname","getObject","resp","removeItem","pass","set","key","get","ret","user","parse","class","slot","className","autoPlay","loop","muted","webkit-playsinline","playsInline","src","videobgWebm","type","cssClass","isOpen","onDidDismiss","message","duration","image","alt","width","onIonChange","placeholder","onClick","React","Component","Card","debug","technologies","x","color","technologiesType","title","size","description","progress","text","styles","buildStyles","pathColor","textColor","types","style","background","colorHandler","rippleType","implementationType","owner","split","charAt","join","API","toast","document","createElement","position","buttons","role","handler","log","dismiss","removeChild","data","axios","getHeaders","response","catch","request","handleRedirect","showError","getItem","post","Authorization","process","clientsecret","accesstoken","today","Date","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","params","fecha_fin","only_cards","frontDate","appendChild","present","push","getColorForType","ListPage","useState","aFilters","setFilters","aImplementationTypes","setImplementationTypes","aTypes","setTypes","aBusinessAreas","setBusinessAreas","showLoading","setShowLoading","showModalImplementationType","setShowModalImplementationType","showModalType","setShowModalType","showModalBusinessArea","setShowModalBusinessArea","setData","myapi","loadData","doGet","aImp","forEach","element","uuid","businessArea","uniqueValues","aArray","filter","thing","index","self","findIndex","t","place","useEffect","loadAdvancedFilteredData","sfilters","reduce","acc","current","terminationUrl","length","addFilters","selectedFilter","a","splice","indexOf","animated","textdata","currentTarget","tempData","smallDescription","toUpperCase","loadFilteredData","debounce","tmp","slice","resetFilter","name","history2","useHistory","items","size-sm","size-lg","size-xl","cardId","technologiesInvolved","bind","rippleOwner","progressDegree","vertical","horizontal","routerLink","icon","stats","funnel","side","trophy","desktop","business","DigitalizationChart","ref","height","innerRadius","outerRadius","rendering","percentageGrade","createRef","Math","min","dataOrigen","createRadialStackedBarChart","item","svg","select","attr","scaleBand","domain","d","State","range","PI","align","y","scaleLinear","d3","parseInt","total","z","columns","arc","startAngle","endAngle","bandwidth","padAngle","padRadius","append","selectAll","enter","call","g","ticks","pop","tickFormat","clone","some","grade","totalPercentage","i","navigationtoIndicatorDetail","fill","mode","round","percentage","Number","EPSILON","arrowForward","searchGradePercentage","undefined","count","size-md","circle","offset-md","listItems","withRouter","DigitalizationGrade","Params","data1","setData1","setDataOrigen","indicatorGroups","dataFormat","CoreData","indicators","alias","remainder","DigitalionChart2","indicator","showAlert","alerMessage","nextProps","informationCircleOutline","handlerSpinner","options","responsive","maintainAspectRatio","layout","padding","left","right","top","bottom","display","fontSize","fontStyle","scales","yAxes","beginAtZero","max","xAxes","legend","displayLegend","legendPosition","labels","tooltips","enabled","backgroundColor","titleFontSize","titleFontColor","borderColor","borderWidth","footerFontSize","footerFontColor","footerAlign","bodyFontSize","bodyFontColor","caretSize","yPadding","xPadding","elements","line","tension","borderCapStyle","point","radius","hitRadius","header","defaultProps","displayTitle","graphData","setGraphData","control","valuesArray","numberLabels","backgroundColors","datasets","label","defaultHref","DigitalizationChart2","Chart","values","date","month","year","fullWidth","fontColor","HistoricPage","getChartData","doPostwithParams","months","labelsArray","indexMonth","auxdate","timestamp","auxmonth","auxyear","unshift","parseFloat","spinner","currentDate","timeStamp","Menu","isLoggedIn","routes","appPages","loggedInPages","path","loggedOutPages","addEventListener","menu","auto-hide","menuId","contentId","art","renderMenuItem","HomePage","RipplePage","match","ripple","selectedRippleId","setSelectedRippleId","SECTIONS","ionSelectedSegmentKey","setIonSelectedSegmentKey","getText","dd","texts","find","getItemsForSection","section","disabled","temp","getRippleInfoItems","rippleRoleables","rol","rolType","plImpactRangeLower","plImpactRangeHigher","costRangeLower","costRangeHigher","timeRangeLower","timeRangeHigher","getNumbersItems","complexityPercentage","numberValue","impactPercentage","getComplexityItems","projectInitDate","projectEndDate","projectStatus","projectRisks","getProjectItems","scrollable","part","content","querySelector","divider","getAttribute","parent","offsetParent","scrollToPoint","offsetTop","clientHeight","scrollEvents","onIonScrollStart","onIonScroll","scrollTop","lowerDistance","lowerDistanceElement","distance","abs","segmentButton","segmentButtonSelected","scrollTo","offsetLeft","onIonScrollEnd","sticky","RippleRoadDiagram","myTree","allData","tmpData","maxLevels","ev","nodeValue","selectedNode","nodeData","getNodeTemplate","border","getBorderFromParent","getColorFromParent","clientWidth","setTimeout","paintDiagram","node","settings","nodeHeight","nodeWidth","isSelected","highlighted","Treeviz","htmlId","idKey","hasFlatData","relationnalField","hasZoom","hasPan","marginLeft","marginRight","marginTop","marginBottom","mainAxisNodeSpacing","secondaryAxisNodeSpacing","isHorizontal","renderNode","linkWidth","linkShape","linkColor","onNodeClick","findIfShowingChildren","nArray","removeChildrenFromParent","isOpened","addChildrenFromParent","concat","sort","b","setSelectedNode","refresh","updateData","nodeId","sendData","parentCallback","el","father","children","indices","getIndicesFromChildrenForRemove","getIndicesFromChildren","toAdd","toRemove","prevProps","prevState","margin","innerWidth","RippleDiagramPage","animate","setAnimate","selectedNodeData","setSelectedNodeData","nonRepeatedValues","setNonRepeatValues","setMaxLevels","auxMaxLevels","trackLevels","originData","setOriginData","setFilterData","typeColor","Array","from","Set","singleData","implementationTypeUUID","typeUUID","businessAreaUUID","flatterDataSet","flatData","hasChildren","predecessor","successor","selected","trackPredecessor","onClickNode","selectedData","informationCircle","App","when","component","Home","exact","RippleList","DigitalizationPage","Digitalization2","to","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iJAAA,IAAIA,EAAM,CACT,2CAA4C,CAC3C,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAi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","file":"static/js/main.2169ac26.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t356,\n\t\t43\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t357,\n\t\t44\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t358,\n\t\t45\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t359,\n\t\t24\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t360,\n\t\t25\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t361,\n\t\t11\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t362,\n\t\t12\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t363,\n\t\t46\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t364,\n\t\t47\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t365,\n\t\t48\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t366,\n\t\t49\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t367,\n\t\t81\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t368,\n\t\t82\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t369,\n\t\t50\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t370,\n\t\t51\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t371,\n\t\t52\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t372,\n\t\t53\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t373,\n\t\t54\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t374,\n\t\t55\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t375,\n\t\t56\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t376,\n\t\t57\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t377,\n\t\t83\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t378,\n\t\t20\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t379,\n\t\t21\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t380,\n\t\t58\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t381,\n\t\t59\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t382,\n\t\t84\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t383,\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t384,\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t385,\n\t\t60\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t386,\n\t\t61\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t387,\n\t\t62\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t388,\n\t\t63\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t389,\n\t\t64\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t390,\n\t\t65\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t391,\n\t\t26\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t392,\n\t\t27\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t393,\n\t\t18\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t394,\n\t\t19\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t395,\n\t\t14\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t396,\n\t\t15\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t397,\n\t\t13\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t398,\n\t\t16\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t399,\n\t\t17\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t400,\n\t\t66\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t401,\n\t\t67\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t402,\n\t\t32\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t403,\n\t\t33\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t404,\n\t\t68\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t405,\n\t\t69\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t406,\n\t\t41\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t407,\n\t\t42\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t408,\n\t\t37\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t409,\n\t\t38\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t410,\n\t\t85\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t411,\n\t\t70\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t412,\n\t\t28\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t413,\n\t\t29\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t414,\n\t\t71\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t415,\n\t\t72\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t416,\n\t\t34\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t417,\n\t\t35\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t418,\n\t\t86\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t419,\n\t\t87\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t420,\n\t\t73\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t421,\n\t\t88\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t422,\n\t\t89\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t423,\n\t\t74\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t424,\n\t\t75\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t425,\n\t\t36\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t426,\n\t\t76\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t427,\n\t\t77\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t428,\n\t\t78\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t429,\n\t\t30\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t430,\n\t\t31\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t431,\n\t\t22\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t432,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t433,\n\t\t90\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 214;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t437,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 215;\nmodule.exports = webpackAsyncContext;","export interface AppConfig {    \r\n    API_ENDPOINT : string\r\n   \r\n  }  \r\n  \r\nexport const CONFIG: AppConfig = {\r\n    // pre endpoint\r\n    // API_ENDPOINT : \"https://hades-nrm-dot-techedge-es-nrm-des.appspot.com\"\r\n    // pro endpoint\r\n    API_ENDPOINT : \"https://hades-nrm-dot-techedge-es-nrm-pro.appspot.com\"\r\n};\r\n\r\nexport enum COMMAND {\r\n    COUNT = \"COUNT\",\r\n    LIMIT = \"LIMIT\",\r\n    OFFSET = \"OFFSET\",\r\n    ORDER_BY = \"ORDER_BY\",\r\n    WHERE = \"WHERE\"\r\n}\r\n\r\nexport enum Operator {\r\n  ASC = \"ASC\",\r\n  CONTAINS = \"CONTAINS\",\r\n  DESC = \"DESC\",\r\n  EQUALS = \"EQUALS\",\r\n  GREATER = \"GREATER\",\r\n  GREATER_OR_EQ = \"GREATER_OR_EQ\",\r\n  IN = \"IN\",\r\n  IS_NOT_NULL = \"IS_NOT_NULL\",\r\n  IS_NULL = \"IS_NULL\",\r\n  LOWER = \"LOWER\",\r\n  LOWER_OR_EQ = \"LOWER_OR_EQ\",\r\n  NOT_CONTAINS = \"NOT_CONTAINS\",\r\n  NOT_EQUALS = \"NOT_EQUALS\"\r\n}\r\n\r\nexport enum TextType {\r\n  ASIS = \"ASIS\",\r\n  CHALLENGE = \"CHALLENGE\",\r\n  VALUE = \"VALUE\",\r\n  SOLUTION = \"SOLUTION\",\r\n  BENEFITS = \"BENFITS\"\r\n}","import React from 'react';\r\nimport { IonToolbar,  IonContent,   IonButton, IonInput, IonToast, IonItem, IonHeader, IonTitle, IonMenuButton, IonPage, IonList } from '@ionic/react';\r\n// import { any } from 'prop-types';\r\nimport image from '../assets/images/logoNRM.png';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Plugins } from '@capacitor/core'\r\n\r\nimport { CONFIG } from '../constants';\r\n\r\nimport './Login.css';\r\nimport videobgWebm from '../assets/video/loopWaves.webm';\r\n\r\ntype Props = { props:any };\r\ntype State = {username: string, password: string, toastState: boolean, toastMessage: string, action: string, email: string};\r\ntype User = {email:string, password:string};\r\nconst { Storage } = Plugins;\r\n\r\n\r\n\r\nclass LoginPage extends React.Component <Props & RouteComponentProps<any>, State> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n     email: '',\r\n     username: '',\r\n     password: '',\r\n     toastState: false,\r\n     toastMessage: 'Message',\r\n     action: \"Login\",\r\n    };           \r\n    this.event = new CustomEvent('loggedIn', {\r\n      detail: false\r\n      \r\n    });\r\n  }\r\n  event: Event;\r\n\r\n  updateUserName = (event: any) => {\r\n    this.setState({ username: event.detail.value });\r\n  };\r\n\r\n  updatePassword = (event: any) => {\r\n    this.setState({ password: event.detail.value });\r\n  };\r\n\r\n  updateEmail = (event: any) => {\r\n    this.setState({ email: event.detail.value });\r\n  };\r\n  \r\n  toggleAction = () => {\r\n    this.state.action === 'Login' ? this.setState({action: 'SignUp'}) : this.setState({action: 'Login'})\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.clearCredentials();\r\n    this.props.history.listen((location, action) => {\r\n      if(location.pathname === \"/login\"){\r\n        this.clearCredentials();\r\n      }\r\n    })\r\n    this.getObject().then((resp)=> {\r\n      if(resp != null) {\r\n        this.setState({ email: resp.email})\r\n        this.setState({ password: resp.password})\r\n      }   \r\n    })\r\n  }\r\n\r\n  clearCredentials(){\r\n    this.event = new CustomEvent('loggedIn', {\r\n      detail: false\r\n    });\r\n    window.dispatchEvent(this.event);   \r\n    localStorage.removeItem(\"token\");       \r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"isLogin\");\r\n    localStorage.removeItem(\"email\");\r\n  }\r\n\r\n\r\n  //// STORAGE BODY /////\r\n\r\n  async setObject(email:string, pass:string) {\r\n    await Storage.set({\r\n      key: 'user',\r\n      value: JSON.stringify({\r\n        email: email,\r\n        password: pass\r\n      })\r\n    });\r\n  }\r\n  \r\n  // JSON \"get\" example\r\n  async getObject(): Promise<User> {\r\n    const ret = await Storage.get({ key: 'user' });\r\n    const user = JSON.parse(ret.value);\r\n    return user;\r\n  }\r\n  \r\n  login= () => {\r\n    this.setObject(this.state.email, this.state.password);\r\n    let url , credentials;     \r\n    if(this.state.action  === 'Login'){\r\n      url = CONFIG.API_ENDPOINT + '/admin/auth';\r\n      credentials = {\r\n          \"username\": this.state.email,\r\n          \"password\": this.state.password\r\n      }\r\n    } else {\r\n      url = CONFIG.API_ENDPOINT + '/auth';\r\n      credentials = {\r\n        \"user\": {\r\n          \"email\": this.state.email,\r\n          \"password\": this.state.password,\r\n          \"username\": this.state.username\r\n        }\r\n      }\r\n    }\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",              \r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n    .then((res) => {\r\n      // TO DO : real login\r\n      if(res.status === 200 || res.status === 201){\r\n        return res.json();\r\n      } else {  \r\n        if(this.state.action === 'SignUp') {\r\n          throw new Error(\"Error creating user\");\r\n        } else {\r\n          throw new Error(`Loggedin failed.  \r\n          Please enter a valid account`)  \r\n        }                \r\n      }\r\n    })\r\n    .then(\r\n      (result) => {\r\n        localStorage.setItem(\"token\",result.accessToken);       \r\n        localStorage.setItem(\"refresh_token\", result.refreshToken)\r\n        localStorage.setItem(\"username\", this.state.username);\r\n        localStorage.setItem(\"isLogin\", \"true\");\r\n        localStorage.setItem(\"email\", this.state.email);\r\n        \r\n        this.event = new CustomEvent('loggedIn', {\r\n          detail: true,\r\n        });\r\n        window.dispatchEvent(this.event);\r\n        this.props.history.replace('/rippleDiagram');\r\n      },\r\n      (error) => {\r\n        console.error(error);           \r\n        this.setState({toastMessage: error.toString(), toastState: true});\r\n      })\r\n  }\r\n\r\n  render(){\r\n    \r\n    return(\r\n      <IonPage>\r\n          <IonHeader>\r\n              <IonToolbar>\r\n                  <IonTitle class=\"header\" >Login</IonTitle>\r\n                  <IonMenuButton slot=\"start\"></IonMenuButton>\r\n              </IonToolbar>\r\n          </IonHeader>\r\n          <IonContent class=\"ion-padding\">\r\n              <video className=\"backgroundVideo\" autoPlay loop muted webkit-playsinline=\"true\" playsInline>\r\n                {/* <source src={videobgMp4} type='video/mp4; codecs=\"h.264\"' /> */}\r\n                <source src={videobgWebm} type=\"video/webm\" />\r\n              </video>\r\n              <IonToast cssClass=\"toast\"\r\n                isOpen={this.state.toastState}\r\n                onDidDismiss={() => this.setState(() => ({ toastState: false }))}\r\n                message={this.state.toastMessage}\r\n                duration={400}\r\n              >\r\n              </IonToast>\r\n              <div className=\"formWrapper\">\r\n                  <form action=\"\" className=\"loginForm\">\r\n                      <img src={image} alt=\"logo\" width=\"100%\" />\r\n                      <IonList>\r\n                        <IonItem>\r\n                            <IonInput onIonChange={this.updateEmail} type=\"email\" placeholder=\"Email\" value={this.state.email}></IonInput>\r\n                        </IonItem>\r\n                        {this.state.action === 'SignUp' ?\r\n                            <IonItem>\r\n                                <IonInput onIonChange={this.updateUserName} type=\"text\" placeholder=\"Username\" value={this.state.username}></IonInput>\r\n                            </IonItem>\r\n                        :\r\n                            null\r\n                        }\r\n                        <IonItem>\r\n                            <IonInput onIonChange={this.updatePassword} type=\"password\" placeholder=\"Password\" value={this.state.password} ></IonInput>\r\n                        </IonItem>\r\n                        <IonButton onClick={this.login} className=\"loginbutton\">{this.state.action}</IonButton>\r\n                      </IonList>\r\n                  </form>\r\n              </div>\r\n          </IonContent>\r\n      </IonPage>\r\n    )\r\n  }\r\n}\r\nexport default LoginPage","import React from 'react';\r\nimport { IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonChip, IonLabel, IonGrid, IonRow, IonCol, IonRippleEffect } from '@ionic/react';\r\nimport {CardInfo, RippleTypeDto, TechnologiesInvolvedDto, RippleImplementationTypeDto} from '../declarations';\r\nimport './Card.css'\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\n\r\nclass Card extends React.Component<CardInfo, any> {\r\n\r\n    \r\n    constructor(props: any){\r\n        super(props);\r\n        console.debug(\"constructor\");\r\n    };\r\n\r\n    render() {\r\n        return (            \r\n            <IonCard onClick={()=>this.props.onClick()} className=\"ion-activatable ripple-card\">\r\n                <IonRippleEffect className=\"customRipple\"></IonRippleEffect>\r\n                <IonCardHeader>\r\n                    <IonCardSubtitle>\r\n                        { this.props.technologies.map((x:TechnologiesInvolvedDto) =>\r\n                            <IonChip key={x.id} color=\"secondary\">\r\n                                <IonLabel>{x.technologiesType}</IonLabel>\r\n                            </IonChip>\r\n                        )}\r\n                    </IonCardSubtitle>\r\n                    <IonCardTitle>{this.props.title}</IonCardTitle>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n                    <IonGrid>\r\n                    <IonRow>\r\n                        <IonCol size=\"8\">\r\n                            { this.props.description }\r\n                        </IonCol>\r\n                        <IonCol size=\"4\">\r\n                            <CircularProgressbar \r\n                                value={this.props.progress} \r\n                                text={`${this.props.progress}%`} \r\n                                styles={buildStyles({\r\n                                pathColor: `${(this.props.progress>80)?'rgba(0,200,0,1)':(this.props.progress>50)?'rgba(0,0,200,1)':'rgba(200,0,0,1)'}`,\r\n                                textColor: `${(this.props.progress>80)?'rgba(0,200,0,1)':(this.props.progress>50)?'rgba(0,0,200,1)':'rgba(200,0,0,1)'}`\r\n                                })}\r\n                            />\r\n                        </IonCol>\r\n                    </IonRow>\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            { this.props.types.map((x:RippleTypeDto) => {\r\n                                return (\r\n                                    <IonChip \r\n                                        style={{width: 'max-content', color: 'white',background:this.props.colorHandler(x.id)}}\r\n                                        key={x.rippleType} \r\n                                        // color={x.rippleType.split(\" \").join(\"\").toLowerCase()}\r\n                                        // color={this.props.colorHandler(x.id)}\r\n                                    >\r\n                                        <IonLabel>{x.rippleType}</IonLabel>\r\n                                    </IonChip>\r\n                                )\r\n                            })}\r\n                            { this.props.implementationType.map((x:RippleImplementationTypeDto) => {\r\n                                return (\r\n                                    <IonChip \r\n                                        style={{width: 'max-content'}}\r\n                                        key={x.id}\r\n                                    >\r\n                                        <IonLabel>{x.implementationType}</IonLabel>\r\n                                    </IonChip>\r\n                                )\r\n                            })}\r\n                        </IonCol>\r\n                        <IonCol>\r\n                            <IonLabel class=\"ion-float-right ion-align-self-center circularLabel\" color=\"dark\">\r\n                                { this.props.owner.split(\" \").map((x)=>x.charAt(0)).join(\"\")}\r\n                            </IonLabel>\r\n                        </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                </IonCardContent>\r\n            </IonCard>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Card;","import axios from 'axios';\r\nimport {\r\n    CONFIG\r\n} from '../constants';\r\nimport {\r\n    local\r\n} from 'd3';\r\n\r\nexport default class API {\r\n\r\n    constructor(history) {\r\n        this.history = history;\r\n\r\n        this.toast = document.createElement('ion-toast');\r\n        this.toast.position = 'bottom';\r\n        this.toast.buttons = [{\r\n            text: 'Done',\r\n            role: 'cancel',\r\n            handler: () => {\r\n                console.log('Cancel clicked');\r\n                this.toast.dismiss();\r\n                document.body.removeChild(this.toast);\r\n            }\r\n        }];\r\n\r\n\r\n    }\r\n\r\n    doPost(url, data) {\r\n\r\n        return axios({\r\n            url: CONFIG.API_ENDPOINT + url,\r\n            headers: this.getHeaders(),\r\n            method: 'post',\r\n            data: data\r\n\r\n        }).then(response => {\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch((e) => {\r\n            if (e.request.status === 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                this.showError(e.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    getHeaders() {\r\n        return {\r\n            \"Content-type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n        }\r\n        // let header = new Headers();\r\n        // header.append(\"accept\",\"application/json\");\r\n        // header.append(\"Authorization\",\"Bearer \"+localStorage.getItem(\"token\"));\r\n        // return header;\r\n    }\r\n    async refreshToken() {\r\n        const accesstoken = await axios.post(`${CONFIG.API_ENDPOINT}/admin/auth/refresh`, JSON.stringify({\r\n            \"grantType\": \"refreshToken\",\r\n            'refreshToken': localStorage.getItem('refresh_token')\r\n        }), {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Basic ${process.env.clientsecret}`\r\n            }\r\n        });\r\n        localStorage.setItem(\"token\", accesstoken.data.accessToken);\r\n\r\n    }\r\n    getDate() {\r\n        let today = new Date();\r\n        let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        let dateTime = date + ' ' + time;\r\n        console.log(dateTime);\r\n        return dateTime.toString();\r\n    }\r\n\r\n    async doGet(url) {\r\n        await this.refreshToken();\r\n        return axios({\r\n            headers: this.getHeaders(),\r\n            url: CONFIG.API_ENDPOINT + url,\r\n            method: 'get',\r\n        }).then(response => {\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch((e) => {\r\n            ////debugger;\r\n            if (e.request.status === 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                this.showError(e.message);\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    // , this.getDate()\r\n    async doGetwithParams(url) {\r\n        await this.refreshToken();\r\n\r\n        return axios({\r\n            headers: this.getHeaders(),\r\n            // body: this.getDate(),\r\n            url: CONFIG.API_ENDPOINT + url,\r\n            method: 'get',\r\n            params: {\r\n                fecha_fin: \"\" + this.getDate() + \"\"\r\n            }\r\n        }).then(response => {\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch((e) => {\r\n            //debugger;\r\n            if (e.request.status === 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                this.showError(e.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    async doGetwithRippleFilterCard(url) {\r\n        await this.refreshToken();\r\n\r\n        return axios({\r\n            headers: this.getHeaders(),\r\n            // body: this.getDate(),\r\n            url: CONFIG.API_ENDPOINT + url,\r\n            method: 'get',\r\n            params: {\r\n                only_cards: true\r\n            }\r\n        }).then(response => {\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch((e) => {\r\n            //debugger;\r\n            if (e.request.status === 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                this.showError(e.message);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    async doPostwithParams(url) {\r\n        await this.refreshToken();\r\n\r\n        return axios({\r\n            headers: this.getHeaders(),\r\n            // body: this.getDate(),\r\n            url: CONFIG.API_ENDPOINT + url,\r\n            method: 'post',\r\n            // data: data,\r\n            data: {\r\n                frontDate: \"\" + this.getDate() + \"\"\r\n            }\r\n        }).then(response => {\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch((e) => {\r\n            //debugger;\r\n            if (e.request.status === 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                this.showError(e.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    showError(message) {\r\n        this.toast.message = message;\r\n        document.body.appendChild(this.toast);\r\n        this.toast.present();\r\n\r\n    }\r\n\r\n\r\n\r\n    handleRedirect() {\r\n        this.history.push(\"/login\");\r\n    }\r\n\r\n\r\n}","export const  getColorForType = (type:any)=>{\r\n    switch(type){\r\n      case 0:\r\n        return \"#ccc\";\r\n      case 1:\r\n        return \"#FFC107\";\r\n      case 2:\r\n        return \"#00BCD4\";\r\n      case 3:\r\n        return \"#8BC34A\";\r\n      case 4:\r\n        return \"#D35BD7\";\r\n      case 5:\r\n        return \"#734ccf\";\r\n      case 6:\r\n        return \"#ed785a\";\r\n      case 7:\r\n        return \"#ab5d0f\";\r\n      case 8:\r\n        return \"#0be6a8\";\r\n      case 9:\r\n        return \"#edba77\";\r\n      case 10:\r\n        return \"#bf3f43\";\r\n      default:\r\n        return \"#ddd\"\r\n    }\r\n  };","import { IonButtons,IonLoading, IonContent, IonHeader, IonIcon, IonItem, IonList, IonMenuButton, IonPage, IonTitle, IonToolbar, IonFab, IonFabButton, IonFabList, IonGrid, IonRow, IonCol, IonSearchbar, IonModal, IonButton, IonLabel, IonChip } from '@ionic/react';\r\nimport {  stats, funnel, business, desktop, trophy  } from 'ionicons/icons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Ripples.css';\r\nimport Card from '../components/Card';\r\nimport {RippleInfo,Filter} from '../declarations';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport  '../utils/httpUtils';\r\nimport API from '../utils/httpUtils';\r\nimport {getColorForType} from '../theme/colorfcns';\r\n\r\ntype Props = { props:any };\r\n\r\nconst ListPage: React.FC<Props & RouteComponentProps<any>> = (params) => {\r\n  \r\n  // const generateData = (value:any, length = 5) =>\r\n  //     d3.range(length).map((item, index) => ({\r\n  //       date: index,\r\n  //       value: value === null || value === undefined ? Math.random() * 100 : value\r\n  //     })\r\n  //   );\r\n\r\n  const [aFilters, setFilters] = useState([]);\r\n\r\n  const [aImplementationTypes, setImplementationTypes] = useState([]);\r\n  const [aTypes, setTypes] = useState([]);\r\n  const [aBusinessAreas, setBusinessAreas] = useState([]);\r\n\r\n\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [showModalImplementationType, setShowModalImplementationType] = useState(false);\r\n  const [showModalType, setShowModalType] = useState(false);\r\n  const [showModalBusinessArea, setShowModalBusinessArea] = useState(false);\r\n  const [data, setData] = useState<Array<RippleInfo>>(null);\r\n  const myapi = new API(params);\r\n  // const changeData = () => {\r\n  //   setData(generateData);\r\n  // };\r\n\r\n  const loadData=()=>{\r\n      setShowLoading(true);\r\n      // myapi.doGetwithRippleFilterCard(\"/nrrm-ripple/ripple?email=\" + localStorage.getItem('email')).then(data => {\r\n      myapi.doGet(\"/nrrm-ripple/ripple/getFilters?email=\" + localStorage.getItem('email') + '&only_cards=true').then(data=>{\r\n        setShowLoading(false);\r\n        if(!data) return setData([]); \r\n        let aImp:Array<Filter>=[];\r\n        let aTypes:Array<Filter>=[];\r\n        let aBusinessAreas:Array<Filter>=[];\r\n        data.forEach( (element:RippleInfo) => {\r\n          aImp.push({key:element.implementationType.uuid,value:element.implementationType.implementationType,type:0});\r\n          aTypes.push({key:element.type.uuid,value:element.type.rippleType,type:1});\r\n          aBusinessAreas.push({key:element.businessArea.uuid,value:element.businessArea.businessArea,type:2});\r\n        });\r\n        setImplementationTypes(uniqueValues(aImp));\r\n        setTypes(uniqueValues(aTypes));\r\n        setBusinessAreas(uniqueValues(aBusinessAreas));\r\n        return setData(data);\r\n      });\r\n    }\r\n\r\n    const uniqueValues=(aArray:Array<any>)=>{\r\n      return aArray.filter((thing, index, self) => self.findIndex(t => t.place === thing.place && t.key === thing.key) === index);\r\n    }\r\n\r\n    const loadFilteredData=(text:string)=>{\r\n      setShowLoading(true);\r\n      let tempData=data.filter((x)=>{\r\n        return (x.smallDescription.toUpperCase().indexOf(text.toUpperCase())!==-1)\r\n      });\r\n      setShowLoading(false);\r\n      return setData(tempData);\r\n      \r\n    }\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  },[]);\r\n\r\n  const loadAdvancedFilteredData=()=>{\r\n    setShowLoading(true);\r\n    let sfilters = aFilters.reduce((acc,current)=>{\r\n      if(current.type===0){\r\n        return acc+\"&implementationType=\"+current.key;\r\n      }else if(current.type===1){\r\n        return acc+\"&type=\"+current.key;\r\n      }else if(current.type===2){\r\n        return acc+\"&businessArea=\"+current.key;\r\n      }else return \"\";\r\n    },\"\");\r\n    let terminationUrl = sfilters.length > 0 ? sfilters + \"&only_cards=true\" : \"&only_cards=true\"\r\n    // myapi.doGet(\"/nrrm-ripple/ripple/getFilters?\"+terminationUrl).then(data=>{\r\n      myapi.doGet(\"/nrrm-ripple/ripple/getFilters?\" + terminationUrl + '&email=' + localStorage.getItem('email')).then(data=>{\r\n      setShowLoading(false);\r\n      return setData(data);\r\n    });\r\n  }\r\n\r\n  const resetFilter = (selectedFilter:Filter)=>{\r\n    \r\n    aFilters.splice(aFilters.indexOf(selectedFilter),1);\r\n    let tmp=aFilters.slice();\r\n    setFilters(tmp);\r\n    loadAdvancedFilteredData();\r\n  };\r\n\r\n  const addFilters = (selectedFilter:Filter)=>{\r\n\r\n    let index = aFilters.findIndex((a)=>a.type===selectedFilter.type);\r\n    if(index>-1) aFilters.splice(index,1);\r\n    \r\n    if(aFilters.indexOf(selectedFilter)===-1){\r\n      aFilters.push(selectedFilter);\r\n      setFilters(aFilters);\r\n      loadAdvancedFilteredData();\r\n    }\r\n    \r\n  };\r\n \r\n\r\n  const onSearch = (e:any)=>{\r\n    let textdata = e.currentTarget.value\r\n    if(textdata.length>0){\r\n      //search\r\n      loadFilteredData(textdata);\r\n    }else{\r\n      //reset\r\n      loadData();\r\n    }\r\n  };\r\n\r\n  const ListItems = (data: any[] & any) => {\r\n    let history2 = useHistory();\r\n    if(!data.data) return <IonList></IonList>;\r\n      \r\n    const items = data.data.map((x:RippleInfo) => {\r\n      const navigateToDetail = () => {\r\n        history2.push(\"/ripple/\"+x.uuid);\r\n      }\r\n  \r\n      return (\r\n        <IonCol size=\"12\" size-sm=\"6\" size-lg=\"4\" size-xl=\"3\" key={x.id}>\r\n  \r\n          <Card cardId={x.id} \r\n            title={x.name}\r\n            description={x.smallDescription} \r\n            technologies={x.technologiesInvolved} \r\n            types={[x.type]} \r\n            colorHandler={getColorForType.bind(null)}\r\n            implementationType={[x.implementationType]}\r\n            owner={x.rippleOwner}\r\n            progress={x.progressDegree}\r\n            onClick={navigateToDetail} \r\n          ></Card>\r\n  \r\n        </IonCol>\r\n      );\r\n    });\r\n    return <IonGrid>\r\n      <IonRow className=\"ion-align-items-stretch\">\r\n        {items}\r\n      </IonRow>\r\n    </IonGrid>;\r\n  };\r\n  \r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>Ripple List</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent>\r\n        <IonLoading\r\n          isOpen={showLoading}\r\n          onDidDismiss={() => setShowLoading(false)}\r\n          message={'Loading...'}\r\n          duration={5000}\r\n        />\r\n        <IonGrid>\r\n          <IonRow>\r\n            <IonCol size=\"12\">\r\n              <IonSearchbar id=\"searchInput\" animated onIonChange={onSearch} debounce={400}></IonSearchbar>\r\n            </IonCol>\r\n          </IonRow>\r\n        </IonGrid>\r\n\r\n        { aFilters.map(a => {\r\n          return <IonChip \r\n            onClick={() => {\r\n              resetFilter(a);\r\n            }}\r\n          >\r\n            <IonLabel>{a.value}</IonLabel>\r\n            <IonIcon name=\"close-circle\" /></IonChip>\r\n        })}\r\n        <ListItems data = {data}/>\r\n        <div className=\"customStackedButtons\">\r\n          <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" >\r\n            <IonFabButton routerLink=\"/rippleDiagram\">\r\n              <IonIcon icon={stats} color=\"light\"/>\r\n            </IonFabButton> \r\n          </IonFab> \r\n          <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" className=\"secondaryFab\" >\r\n            <IonFabButton color=\"secondary\">\r\n              <IonIcon icon={funnel} color=\"light\"/>\r\n            </IonFabButton> \r\n            <IonFabList side=\"top\">\r\n              <IonFabButton \r\n                title=\"Implementation Type\" \r\n                onClick={(e) => {\r\n                  setShowModalImplementationType(true);\r\n                }}\r\n              >\r\n                <IonIcon icon={trophy} />\r\n              </IonFabButton>\r\n              <IonFabButton \r\n                title=\"Solution Type\" \r\n                onClick={(e) => {\r\n                  setShowModalType(true);\r\n                }}\r\n              >\r\n                <IonIcon icon={desktop} />\r\n              </IonFabButton>\r\n              <IonFabButton \r\n                title=\"Business Area\" \r\n                onClick={(e) => {    \r\n                  setShowModalBusinessArea(true);\r\n                }}\r\n              >\r\n                <IonIcon icon={business} />\r\n              </IonFabButton>\r\n            </IonFabList>\r\n          </IonFab>\r\n        </div>\r\n        <IonModal isOpen={showModalImplementationType}>\r\n          <IonList>\r\n            { aImplementationTypes.map(a =>\r\n              <IonItem key={a.key} \r\n                onClick={(e) => {\r\n                  addFilters(a);\r\n                  setShowModalImplementationType(false);\r\n                }}\r\n              >\r\n                {a.value}\r\n              </IonItem>)}\r\n          </IonList>\r\n          <IonButton \r\n            onClick={() => setShowModalImplementationType(false)}\r\n          >\r\n            Cerrar\r\n          </IonButton>\r\n        </IonModal>\r\n        <IonModal isOpen={showModalType}>\r\n          <IonList>\r\n            { aTypes.map(a => \r\n              <IonItem \r\n                key={a.key} \r\n                onClick={(e) => {\r\n                  addFilters(a);\r\n                  setShowModalType(false);\r\n                }}\r\n              >\r\n                {a.value}\r\n              </IonItem>)}\r\n          </IonList>\r\n          <IonButton \r\n            onClick={() => setShowModalType(false)}\r\n          >\r\n            Cerrar\r\n          </IonButton>\r\n        </IonModal>\r\n        <IonModal isOpen={showModalBusinessArea}>\r\n          <IonList>\r\n            { aBusinessAreas.map(a =>\r\n              <IonItem \r\n                key={a.key} \r\n                onClick={(e) => {\r\n                  addFilters(a);\r\n                  setShowModalBusinessArea(false);\r\n                }}\r\n              >\r\n                {a.value}\r\n              </IonItem>)}\r\n          </IonList>\r\n          <IonButton onClick={() => setShowModalBusinessArea(false)}>Cerrar</IonButton>\r\n        </IonModal>\r\n        \r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\nexport default ListPage;\r\n","import './Charts.css'\r\nimport { RippleIndicatorInfo, RippleIndicator } from '../declarations';\r\nimport React from 'react';\r\nimport { scaleLinear, scaleBand } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport * as d3 from 'd3';\r\nimport { IonCard, IonCardContent, IonGrid, IonRow, IonCol, IonCardHeader, IonCardSubtitle, IonCardTitle, IonItem, IonIcon, IonList, IonText, IonLabel, IonButton, IonToolbar } from '@ionic/react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { arrowForward } from 'ionicons/icons';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\n\r\ntype State = { data: Array<RippleIndicatorInfo>, dataOrigen: Array<RippleIndicator> };\r\n\r\nclass DigitalizationChart extends React.Component<any, State>{\r\n    ref: any;\r\n    width: number;\r\n    height: number;\r\n    innerRadius: number;\r\n    outerRadius: number;\r\n    rendering: boolean;\r\n    percentageGrade: number;\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.ref = React.createRef();\r\n        this.width = 975;\r\n        this.height = 975;\r\n        this.outerRadius = Math.min(this.width, this.height) / 2;\r\n        this.innerRadius = 180;\r\n        this.rendering = true;\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //this.createRadialStackedBarChart()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.data && this.props.dataOrigen && this.rendering) {\r\n            this.createRadialStackedBarChart();\r\n            this.rendering = false;\r\n        }\r\n    }\r\n\r\n\r\n    navigationtoIndicatorDetail(item: RippleIndicator) {\r\n        this.props.history.push('/dgrade2/' + item.id, item);\r\n    }\r\n\r\n    createRadialStackedBarChart() {\r\n\r\n        let svg = select(this.ref.current)\r\n            .attr(\"viewBox\", `${-this.width / 2} ${-this.height / 2} ${this.width} ${this.height}`)\r\n            .attr(\"class\", \"graphic\")\r\n            .style(\"width\", \"100%\")\r\n            .style(\"height\", \"auto\")\r\n            .style(\"font\", \"1.8em helvetica\");\r\n        //.style(\"padding\", \"0.1em\");\r\n\r\n        let x = scaleBand()\r\n            .domain(this.props.data.map((d: any) => d.State))\r\n            .range([0, 2 * Math.PI])\r\n            .align(0);\r\n\r\n        let y = scaleLinear()\r\n            .domain([0, d3.max(this.props.data, (d: any) => parseInt(d.total))])\r\n            .range([this.innerRadius, this.outerRadius]);\r\n\r\n        let z: any = d3.scaleOrdinal()\r\n            .domain(this.props.data.columns.slice(1))\r\n            .range([\"#80c242\", \"#d1e0e0\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\r\n\r\n        let arc: any = d3.arc()\r\n            .innerRadius((d: any) => y(d[0]))\r\n            .outerRadius((d: any) => y(d[1]))\r\n            .startAngle((d: any) => x(d.data.State))\r\n            .endAngle((d: any) => x(d.data.State) + x.bandwidth())\r\n            .padAngle(0.04)\r\n            .padRadius(this.innerRadius);\r\n\r\n        let xAxis = (g: any) => g\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .call((g: any) => g.selectAll(\"g\")\r\n                .data(this.props.data)\r\n                .join(\"g\")\r\n                .attr(\"transform\", (d: any) => `\r\n                    rotate(${((x(d.State) + x.bandwidth() / 2) * 180 / Math.PI - 90)})\r\n                    translate(${this.innerRadius},0)\r\n                `)\r\n                .call((g: any) => g.append(\"line\")\r\n                    .attr(\"x2\", -5)\r\n                    .attr(\"stroke\", \"#FFF\"))\r\n                .call((g: any) => g.append(\"text\")\r\n                    .attr(\"transform\", (d: any) => (x(d.State) + x.bandwidth() / 2 + Math.PI / 2) % (2 * Math.PI) < Math.PI\r\n                        ? \"rotate(90)translate(0,65)\"\r\n                        : \"rotate(-90)translate(0,-30)\")\r\n                    .text((d: any) => d.State)));\r\n\r\n        let yAxis = (g: any) => g\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .call((g: any) => g.append(\"text\")\r\n                .attr(\"y\", () => -y(y.ticks(5).pop()))\r\n                .attr(\"dy\", \"-1.9em\"))\r\n            // .text(\"Population\"))\r\n            .call((g: any) => g.selectAll(\"g\")\r\n                .data(y.ticks(5).slice(1))\r\n                .join(\"g\")\r\n                .attr(\"fill\", \"none\")\r\n                .call((g: any) => g.append(\"circle\")\r\n                    .attr(\"stroke\", \"#FFF\")\r\n                    // .attr(\"stroke-opacity\", 0.9)\r\n                    .attr(\"stroke-width\", '1.5px')\r\n                    .attr(\"r\", y))\r\n                .call((g: any) => g.append(\"text\")\r\n                    .attr(\"y\", (d: any) => -y(d))\r\n                    .attr(\"dy\", \"0.85em\")\r\n                    .attr(\"stroke\", \"#FFF\")\r\n                    .attr(\"stroke-width\", 5)\r\n                    .text(y.tickFormat(5, \"s\"))\r\n                    .clone(true)\r\n                    .attr(\"fill\", \"#000\")\r\n                    .attr(\"stroke\", \"none\")));\r\n\r\n        svg.append(\"g\")\r\n            .selectAll(\"g\")\r\n            .data(d3.stack().keys(this.props.data.columns.slice(1))(this.props.data))\r\n            .join(\"g\")\r\n            .attr(\"fill\", d => z(d.key))\r\n            .selectAll(\"path\")\r\n            .data((d: any) => d)\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"d\", arc);\r\n\r\n        svg.append(\"g\")\r\n            .call(xAxis);\r\n\r\n        svg.append(\"g\")\r\n            .call(yAxis);\r\n\r\n    }\r\n\r\n    searchGradePercentage() {\r\n        if (this.props.dataOrigen) {\r\n            return (\r\n                this.props.dataOrigen.some((item: RippleIndicator) => {\r\n                    if (item.grade) {\r\n                        this.percentageGrade = item.grade.totalPercentage * 100;\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    listItems() {\r\n        if (this.props.dataOrigen) {\r\n            return (\r\n                <IonList className=\"item-graph-list\">\r\n                    {this.props.dataOrigen.map((item: RippleIndicator, i: any) => {\r\n                        return (\r\n                            <IonItem class=\"item-graph\"\r\n                                key={i}\r\n                            >\r\n                                <IonText>\r\n                                    <strong>\r\n                                        {item.name}\r\n                                    </strong>\r\n                                </IonText>\r\n                                <IonButton\r\n                                    onClick={() => this.navigationtoIndicatorDetail(item)}\r\n                                    slot=\"end\"\r\n                                    fill=\"clear\"\r\n                                    size=\"default\"\r\n                                    class=\"info\"\r\n                                >\r\n                                    <IonLabel color=\"success\" mode=\"ios\">\r\n                                        {Math.round((item.percentage * 100 + Number.EPSILON) * 100) / 100}%\r\n                                    </IonLabel>\r\n                                    <IonIcon \r\n                                        icon={arrowForward}\r\n                                        mode=\"ios\" \r\n                                        color=\"success\" \r\n                                        size=\"medium\" \r\n                                        slot=\"end\"\r\n                                    ></IonIcon>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        );\r\n                    })}\r\n                </IonList>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <IonCard className=\"graph-card\">\r\n                    <IonCardHeader>\r\n                    {<IonCardSubtitle>Digitalization grade</IonCardSubtitle> ? <IonCardSubtitle>Digitalization grade</IonCardSubtitle> : <Skeleton></Skeleton>}\r\n                        {/* <IonCardTitle class=\"total-percentage\">\r\n                            { this.searchGradePercentage() }\r\n                            { this.percentageGrade + '%' }\r\n                        </IonCardTitle> */}\r\n                        <IonCardTitle class=\"total-percentage\">  {this.searchGradePercentage()}\r\n                            { this.searchGradePercentage() }\r\n                            { this.percentageGrade == undefined ? <Skeleton count={1} width={150}></Skeleton> : this.percentageGrade + \"%\"}\r\n                        </IonCardTitle>  \r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                        <IonGrid>\r\n                            {/* <IonRow>\r\n                                <IonCol size-sm=\"6\" size=\"12\">\r\n                                    <div className=\"chart-wrapper\">\r\n                                        <svg \r\n                                            ref={this.ref}\r\n                                            width={this.width} \r\n                                            height={this.height}\r\n                                        >\r\n                                        </svg>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size-sm=\"6\" size=\"12\">\r\n                                    { this.listItems() }\r\n                                </IonCol>\r\n                            </IonRow> */}\r\n                             <IonRow>\r\n                                {<IonCol size-md=\"5\" size=\"12\">    \r\n                                    <div>\r\n                                        <svg \r\n                                            ref={this.ref}\r\n                                            width={this.width} \r\n                                            height={this.height} \r\n                                        >\r\n                                        </svg>\r\n                                    </div></IonCol> ? \r\n                                    <IonCol>  \r\n                                    <div>\r\n                                        <svg \r\n                                            ref={this.ref}\r\n                                            width={this.width} \r\n                                            height={this.height} \r\n                                        >\r\n                                        </svg>\r\n                                    </div>\r\n                                    </IonCol>  :\r\n                                     <Skeleton  circle={true} height={339} width={339}></Skeleton>}\r\n                                   \r\n                                {/* <IonCol size-md=\"5\" size=\"12\">\r\n                                    <div>\r\n                                        <svg \r\n                                            ref={this.ref}\r\n                                            width={this.width} \r\n                                            height={this.height} \r\n                                        >\r\n                                        </svg>\r\n                                    </div> */}\r\n                                \r\n                                <IonCol size-md=\"6\" offset-md=\"1\" size=\"12\">\r\n                                    { this.listItems() == undefined ? <Skeleton count={6}></Skeleton> : this.listItems() }\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonCardContent>\r\n\r\n                </IonCard>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(DigitalizationChart);","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonLoading } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport DigitalizationChart from '../components/DigitalizationChart'\r\n\r\nimport API from '../utils/httpUtils';\r\nimport { RippleIndicator, RippleIndicatorInfo } from '../declarations';\r\n\r\n\r\ntype Props = { props:any };\r\n\r\n//Function Component Definition\r\nconst DigitalizationGrade:React.FC<Props & RouteComponentProps<any>> = (Params) => {\r\n  \r\n  const myapi = new API(Params);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [data1, setData1] = useState<Array<RippleIndicatorInfo>>(null);\r\n  const [dataOrigen, setDataOrigen] = useState<Array<RippleIndicator>>(null);\r\n\r\n  const loadData = async() => {\r\n    try {\r\n      setShowLoading(true);\r\n      // const response: Array<RippleIndicator> = await myapi.doGet(\"/nrrm-ripple/indicator\");\r\n      const response: Array<RippleIndicator> = await myapi.doGet(\"/nrrm-ripple/indicator?email=\" + localStorage.getItem('email'));\r\n      indicatorGroups(response);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setData1(null);\r\n    }\r\n  }\r\n\r\n  const indicatorGroups = (data:Array<RippleIndicator>) => {\r\n    let CoreData: Array<RippleIndicatorInfo> = [];\r\n    let dataFormat:any;\r\n  \r\n    if(!data) return;\r\n    for(let i=0; i < data.length; i++){\r\n      if(data[i].indicators.length>0){\r\n        CoreData.push({\r\n          State:data[i].alias,\r\n          current: data[i].percentage * 100,\r\n          remainder: 100 - (data[i].percentage * 100),\r\n          total: 100\r\n        });\r\n      }\r\n    }\r\n\r\n    dataFormat = [...CoreData];\r\n    dataFormat.columns =[\"State\", \"current\" ,\"remainder\"];\r\n\r\n    setShowLoading(false);\r\n    setData1(dataFormat);\r\n    setDataOrigen(data);\r\n  }\r\n\r\n\r\n  // https://es.reactjs.org/docs/hooks-reference.html\r\n  // para bindear los objetos con la vista usa el método setState, por ejemplo, \r\n  // const [showLoading, setShowLoading] = useState(true);\r\n  // esto crea un parametro llamado \"showLoading\" con un método de seteo \"setShowLoading\" y por defecto tiene el valor \"true\"\r\n  // que puedes bindear en el template y que se gestiona con el ciclo de vida de la pantalla\r\n\r\n  //hook que se lanza al cargar el componente en pantalla\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>Digitalization Grade</IonTitle>\r\n        </IonToolbar>\r\n\r\n      </IonHeader>\r\n      <IonContent>\r\n\r\n        <IonLoading\r\n          isOpen={showLoading}\r\n          onDidDismiss={() => setShowLoading(false)}\r\n          message={'Loading...'}\r\n          duration={5000}\r\n        />\r\n        <DigitalizationChart data={data1} dataOrigen={dataOrigen} />\r\n\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default DigitalizationGrade;\r\n","import './Charts.css'\r\nimport React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { GraphDataChartBar, RippleIndicator } from '../declarations';\r\nimport {\r\n    IonCardSubtitle,\r\n    IonItem,\r\n    IonText,\r\n    IonButton,\r\n    IonLabel,\r\n    IonIcon,\r\n    IonAlert,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonList\r\n} from '@ionic/react';\r\nimport { informationCircleOutline } from 'ionicons/icons';\r\n\r\n\r\ntype State = { data: GraphDataChartBar, indicator: RippleIndicator, showAlert: boolean, alerMessage: string};\r\n\r\nexport class DigitalionChart2 extends Component<any, State> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            indicator: null,\r\n            showAlert: false,\r\n            alerMessage: \"\"\r\n        }      \r\n    }\r\n\r\n    static defaultProps = {\r\n        displayTitle: true,\r\n        displayLegend: false,\r\n        legendPosition: 'right',\r\n        location: 'Your historic data'\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { indicator } = this.props;\r\n        const { data } = this.props;\r\n        this.setState({ indicator: indicator });\r\n        this.setState({ data: data });\r\n    }\r\n    \r\n    componentDidUpdate(nextProps: any) {\r\n        const { indicator } = this.props;\r\n        const { data } = this.props;\r\n        if (nextProps.indicator !== indicator) {\r\n            if (indicator) {\r\n                this.setState({ indicator: indicator });\r\n            }\r\n        }\r\n        if (nextProps.data !== data) {\r\n            if (data) {\r\n                this.setState({ data: data });\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    listItems(){\r\n        if(this.state.indicator && this.state.indicator.indicators) {\r\n            return (\r\n                <IonList className=\"item-graph-list\">\r\n                    {this.state.indicator.indicators.map((item:any, i:any) => {   \r\n                        return (\r\n                            <IonItem class=\"item-graph\" \r\n                                key={i} \r\n                            >\r\n                                <IonText>\r\n                                    <strong>\r\n                                        {i+1}.&nbsp;{item.alias}\r\n                                    </strong>\r\n                                </IonText>\r\n                                <IonButton \r\n                                    onClick={() => {\r\n                                        this.setState({showAlert: true});\r\n                                        this.setState({alerMessage: item.name});\r\n                                    }}\r\n                                    slot=\"end\" \r\n                                    fill=\"clear\"\r\n                                    size=\"default\"\r\n                                    class=\"info\"\r\n                                >\r\n                                    <IonLabel color=\"success\" mode=\"ios\">\r\n                                        { Math.round((item.percentage*100 + Number.EPSILON) * 100) / 100}%\r\n                                    </IonLabel>\r\n                                    <IonIcon \r\n                                        icon={informationCircleOutline} \r\n                                        mode=\"ios\" \r\n                                        color=\"success\" \r\n                                        size=\"small\" \r\n                                        slot=\"end\"\r\n                                    ></IonIcon>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        );\r\n                    })}\r\n                    {this.props.handlerSpinner(false)}\r\n                </IonList>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (      \r\n            <div>\r\n                <IonCard className=\"graph-card\">\r\n                    <IonCardHeader>\r\n                        <IonCardSubtitle>\r\n                            { this.state.indicator? this.state.indicator.name : null } indicators\r\n                        </IonCardSubtitle>\r\n                        <IonCardTitle className=\"total-percentage total-percentage--small\">\r\n                            { this.state.indicator? this.state.indicator.percentage*100 + '%' : null }\r\n                        </IonCardTitle>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                        <IonGrid>\r\n                            <IonRow>\r\n                                <IonCol size-sm=\"6\" size=\"12\">\r\n                                    <div className=\"chart-wrapper\">\r\n                                        { this.state.data ? \r\n                                            <Bar\r\n                                                data={this.state.data}\r\n                                                options={{\r\n                                                    responsive: true,\r\n                                                    maintainAspectRatio: false,\r\n                                                    layout: {\r\n                                                        padding: {\r\n                                                            left: 0,\r\n                                                            right: 10,\r\n                                                            top: 0,\r\n                                                            bottom: 0\r\n                                                        }\r\n                                                    },\r\n                                                    title: {\r\n                                                        display: false,\r\n                                                        // text: 'Report from' + this.state.indicator.name,\r\n                                                        fontSize: 30,\r\n                                                        position: 'top',\r\n                                                        fontStyle: 'regular',\r\n                                                        padding: 12\r\n                                                    },\r\n                                                    scales: {\r\n                                                        yAxes: [{\r\n                                                            ticks: {\r\n                                                                beginAtZero: true,\r\n                                                                max: 100\r\n                                                            }\r\n                                                        }],\r\n                                                        xAxes: [{\r\n                                                            ticks: {\r\n                                                                beginAtZero: true,\r\n                \r\n                                                            }\r\n                                                        }]\r\n                                                    },\r\n                                                    legend: {\r\n                                                        display: this.props.displayLegend,\r\n                                                        position: this.props.legendPosition,\r\n                                                        labels: {\r\n                                                            fontSize: 16,\r\n                                                            fontStyle: 'regular'\r\n                                                        }\r\n\r\n                                                    },\r\n                                                    tooltips: {\r\n                                                        enabled: true,\r\n                                                        mode: 'nearest',\r\n                                                        backgroundColor: \"rgba(224, 232, 216,1)\",\r\n                                                        titleFontSize: 16,\r\n                                                        titleFontColor: \"rgba(117, 93, 96, 1)\",  \r\n                                                        borderColor: \"rgba(184, 204, 189, 1)\",  \r\n                                                        borderWidth: 0.7,\r\n                                                        footerFontSize: 22, \r\n                                                        footerFontColor: \"rgba(117, 93, 96, 1)\",  \r\n                                                        footerAlign: 'right',    \r\n                                                        bodyFontSize: 18,\r\n                                                        bodyFontColor: \"rgba(117, 93, 96, 1)\",  \r\n                                                        caretSize: 10,\r\n                                                        yPadding: 10,\r\n                                                        xPadding: 10,\r\n                                                    },\r\n                                                    elements: {\r\n                                                        line: {\r\n                                                            tension: 0.4,\r\n                                                            borderColor: \"rgba(32, 156, 56)\",\r\n                                                            borderWidth: 1,\r\n                                                            borderCapStyle: \"square\"\r\n                                                        },\r\n                                                        point: {\r\n                                                            backgroundColor: \"rgba(14, 128, 37, 1)\",\r\n                                                            radius: 2,\r\n                                                            hitRadius: 4,\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />   : null}\r\n                                            \r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size-sm=\"6\" size=\"12\">\r\n                                    { this.listItems() }\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n                <IonAlert\r\n                    isOpen={this.state.showAlert}\r\n                    onDidDismiss={() => this.setState({showAlert: false})}\r\n                    header={'Indicator Detail'}\r\n                    // subHeader={'Subtitle'}\r\n                    message={this.state.alerMessage}\r\n                    buttons={['Close']}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DigitalionChart2;\r\n\r\n\r\n","import { IonButtons, IonContent, IonHeader, IonPage, IonTitle, IonToolbar,IonLoading, IonBackButton } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport DigitalizationChart2 from '../components/DigitalizationChart2'\r\n\r\nimport { RippleIndicator, GraphDataChartBar } from '../declarations';\r\n\r\n\r\n\r\ntype Props = { props:any };\r\n\r\n//Function Component Definition\r\nconst Digitalization2:React.FC<Props & RouteComponentProps<any>> = (Params) => {\r\n\r\n  \r\n  \r\n  const [showLoading, setShowLoading] = useState(null);\r\n\r\n  const [dataOrigen, setDataOrigen] = useState<RippleIndicator>(null);\r\n  const [graphData, setGraphData] = useState<GraphDataChartBar>(null);\r\n  \r\n  const loadData = ()=>{\r\n    try{\r\n\r\n      setShowLoading(true);\r\n\r\n     // if(Params.location.state != null && Params.location.state as RippleIndicator){\r\n          \r\n          let indicator = Params.location.state;\r\n\r\n          if(indicator.indicators){\r\n      \r\n            let valuesArray:Array<number> = [];\r\n            let numberLabels:Array<string> = [];\r\n            let backgroundColors:Array<string> = [];\r\n\r\n            indicator.indicators.forEach((element:RippleIndicator, index:number) => {\r\n              // labelsArray.push(element.description);\r\n              numberLabels.push((index+1).toString());\r\n              \r\n              valuesArray.push(Math.round(element.percentage * 100));\r\n              backgroundColors.push('rgba(128,194,66, 0.9)');\r\n            });\r\n\r\n            const graphData: GraphDataChartBar = {        \r\n              labels: numberLabels,\r\n              datasets: [\r\n                {\r\n                  label: 'Values',\r\n                  data: valuesArray,\r\n                  backgroundColor: backgroundColors\r\n                }\r\n              ]\r\n                          \r\n          };\r\n          setGraphData(graphData);\r\n          setDataOrigen(indicator);\r\n          \r\n        }\r\n      //}\r\n    }catch (e) {\r\n      console.log(e);\r\n      \r\n    }   \r\n  }\r\n\r\n  function handlerSpinner(control:boolean){\r\n    setShowLoading(control);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handlerSpinner(true);\r\n    loadData();\r\n    \r\n }, []);\r\n\r\n\r\n  return (\r\n    \r\n  <IonPage>\r\n      <IonHeader>\r\n          <IonToolbar>\r\n              <IonButtons slot=\"start\">\r\n                <IonBackButton  defaultHref=\"/dgrade/\"/>\r\n              </IonButtons>\r\n              <IonTitle>{dataOrigen != null ? dataOrigen.name : null}</IonTitle>\r\n          </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n          <IonLoading\r\n                  isOpen={showLoading}\r\n                  // onDidDismiss={() => setShowLoading(false)}\r\n                  message={'Loading...'}\r\n                  // duration={5000}\r\n                />\r\n          {graphData && dataOrigen? <DigitalizationChart2 data={graphData} indicator={dataOrigen} handlerSpinner={handlerSpinner}  /> : null }\r\n      </IonContent>\r\n  </IonPage>\r\n  \r\n  );\r\n};\r\n\r\nexport default withRouter(Digitalization2);\r\n","import './Charts.css'\r\nimport React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n    IonCard, \r\n    IonCardHeader,\r\n    IonCardSubtitle,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonList,\r\n    IonItem,\r\n    IonText,\r\n    IonButton,\r\n    IonLabel\r\n} from '@ionic/react';\r\n\r\n\r\ntype State = { data: any };\r\n\r\nexport class Chart extends Component<any, State> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            data: null\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        displayTitle: true,\r\n        displayLegend: false,\r\n        legendPosition: 'right',\r\n        location: 'Your historic data'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data } = this.props;\r\n        this.setState({ data: data });\r\n    }\r\n\r\n    componentDidUpdate(nextProps: any) {\r\n        const { data } = this.props;\r\n        if (nextProps.data !== data) {\r\n            if (data) {\r\n                this.setState({ data: data });\r\n            }\r\n        }\r\n    }\r\n\r\n    listItems() {\r\n        if (this.state.data) {\r\n            const labels = this.state.data.labels;\r\n            const values = this.state.data.datasets[0].data;\r\n            let history:any[] = [];\r\n\r\n            for (let i = 0; i < labels.length; i++) {\r\n                const element = {\r\n                    date: {\r\n                        month: labels[i][0],\r\n                        year: labels[i][1]\r\n                    },\r\n                    value: values[i]\r\n                }\r\n                history.push(element);\r\n            }\r\n        \r\n            return (\r\n                <IonList className=\"item-graph-list\">\r\n                    {history.map((item:any ,i: any) => {\r\n                        return (\r\n                            <IonItem class=\"item-graph\"\r\n                                key={i}\r\n                            >\r\n                                <IonText>\r\n                                    <strong>\r\n                                        {item.date.month + ' ' + item.date.year}\r\n                                    </strong>\r\n                                </IonText>\r\n                                <IonButton \r\n                                    // onClick={() => {}}\r\n                                    slot=\"end\" \r\n                                    fill=\"clear\"\r\n                                    size=\"default\"\r\n                                    class=\"info\"\r\n                                >\r\n                                    <IonLabel color=\"success\" mode=\"ios\">\r\n                                        { Math.round(item.value * 100) / 100 }%\r\n                                    </IonLabel>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        );\r\n                    })}\r\n                    {/* { this.props.handlerSpinner(false) } */}\r\n                </IonList>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <IonCard className=\"graph-card\">\r\n                    <IonCardHeader>\r\n                        <IonCardSubtitle>\r\n                            Historical digitalization grade\r\n                        </IonCardSubtitle>\r\n                        <IonCardTitle class=\"totalPercentage important\" color=\"success\">\r\n                            Evolution grade\r\n                        </IonCardTitle>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                        <IonGrid>\r\n                            <IonRow>\r\n                                <IonCol size-sm=\"6\" size=\"12\">\r\n                                    <div className=\"chart-wrapper\">\r\n                                        {this.state.data ? \r\n                                            <Line\r\n                                                data={this.state.data}\r\n                                                options={{\r\n                                                    responsive: true,\r\n                                                    maintainAspectRatio: false,\r\n                                                    layout: {\r\n                                                        padding: {\r\n                                                            left: 0,\r\n                                                            right: 0,\r\n                                                            top: 0,\r\n                                                            bottom: 0\r\n                                                        }\r\n                                                    },\r\n                                                    scales: {\r\n                                                        yAxes: [{\r\n                                                            ticks: {\r\n                                                                beginAtZero: true,\r\n                                                                max: 100\r\n                                                            }\r\n                                                        }]\r\n                                                    },\r\n                                                    title: {\r\n                                                        display: false,\r\n                                                        text: 'Report from' + this.props.title,\r\n                                                        fontSize: 60,\r\n                                                        position: 'top',\r\n                                                        fontStyle: 'regular',\r\n                                                        padding: 12\r\n                                                    },\r\n                                                    legend: {\r\n                                                        display: this.props.displayLegend,\r\n                                                        position: this.props.legendPosition,\r\n                                                        align: \"center\",\r\n                                                        fullWidth: true,\r\n                                                        labels: {\r\n                                                            fontColor: \"rgba(255, 0 , 0 , 0.9)\",\r\n                                                            fontSize: 40,\r\n                                                            fontStyle: 'regular'\r\n                                                        }\r\n\r\n                                                    },\r\n                                                    tooltips: {\r\n                                                        enabled: true,\r\n                                                        mode: 'nearest',\r\n                                                        backgroundColor: \"rgba(224, 232, 216,1)\",\r\n                                                        titleFontSize: 16,\r\n                                                        titleFontColor: \"rgba(117, 93, 96, 1)\",  \r\n                                                        borderColor: \"rgba(184, 204, 189, 1)\",  \r\n                                                        borderWidth: 0.7,\r\n                                                        footerFontSize: 22, \r\n                                                        footerFontColor: \"rgba(117, 93, 96, 1)\",  \r\n                                                        footerAlign: 'right',    \r\n                                                        bodyFontSize: 18,\r\n                                                        bodyFontColor: \"rgba(117, 93, 96, 1)\",  \r\n                                                        caretSize: 10,\r\n                                                        yPadding: 10,\r\n                                                        xPadding: 10,\r\n                                                    },\r\n                                                    elements: {\r\n                                                        line: {\r\n                                                            tension: 0,\r\n                                                            borderColor: \"rgba(32, 156, 56)\",\r\n                                                            borderWidth: 1,\r\n                                                            borderCapStyle: \"square\"\r\n                                                        },\r\n                                                        point: {\r\n                                                            backgroundColor: \"rgba(14, 128, 37, 1)\",\r\n                                                            radius: 2,\r\n                                                            hitRadius: 4,\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size-sm=\"6\" size=\"12\">\r\n                                    { this.listItems() }\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonLoading } from '@ionic/react';\r\nimport Chart from \"../components/Chart\"\r\nimport './HistoricPage.css';\r\nimport API from '../utils/httpUtils';\r\nimport { ChartData } from '../declarations';\r\n\r\n\r\ninterface ChartProps {}\r\ninterface ChartState {data:any, spinner: boolean, timeStamp:any}\r\n \r\nclass HistoricPage extends Component <ChartProps, ChartState>  {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n       data: {},\r\n       spinner: true,\r\n       timeStamp : \"\",\r\n    }\r\n\r\n    this.handlerSpinner = this.handlerSpinner.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getChartData();\r\n    this.currentDate();\r\n  }\r\n  \r\n\r\n  // Post Call to get the chart Values, we send the timestamp created when the component did  mount\r\n\r\n  getChartData = async () => {\r\n\r\n    const myapi = new API();\r\n    \r\n    try {\r\n      const response : Array<ChartData> = await myapi.doPostwithParams(\"/nrrm-ripple/grade-history/getFilterGradesbyYear\");\r\n      // const response : Array<ChartData> = await myapi.doGetwithParams(\"/nrrm-ripple/grade-history/getFilterGradesbyYear\");\r\n\r\n      const months = {\r\n        '00': 'ENE',\r\n        '01': 'FEB',\r\n        '02': 'MAR',\r\n        '03': 'ABR',\r\n        '04': 'MAY',\r\n        '05': 'JUN',\r\n        '06': 'JUL',\r\n        '07': 'AGO',\r\n        '08': 'SEP',\r\n        '09': 'OCT',\r\n        '10': 'NOV',\r\n        '11': 'DIC',\r\n      };\r\n\r\n      let labelsArray:any = [];\r\n      let valuesArray:any = [];\r\n      let indexMonth: number = new Date().getMonth();\r\n\r\n      for (let i = (response.length - 1); i >= 0; i--) {\r\n        const element = response[i];\r\n        const auxdate = new Date(element.timestamp);\r\n        const auxmonth = indexMonth.toString().length == 1 ? '0'+ indexMonth.toString() : indexMonth.toString();\r\n        const auxyear = ' ' + auxdate.getFullYear().toString();\r\n\r\n        labelsArray.unshift([(months as any)[auxmonth], auxyear]);\r\n        valuesArray.unshift(Math.round(parseFloat(element.totalPercentage) * 100));\r\n        \r\n        indexMonth--;\r\n        if(indexMonth < 0){\r\n          indexMonth = 11;\r\n        }\r\n      }\r\n\r\n      const graphData = {\r\n        labels: labelsArray,\r\n        datasets: [\r\n          {\r\n            label: '% ',\r\n            data: valuesArray,\r\n            backgroundColor: [\r\n              'rgba(128,194,66, 0.7)' \r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n    \r\n      this.setState({spinner: true, data: graphData });\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n \r\n  currentDate = () => {\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    let dateTime = date+' '+time;\r\n    this.setState({\r\n      ...this.state,\r\n      timeStamp: dateTime,\r\n    });\r\n  }\r\n\r\n  \r\n  handlerSpinner(control:boolean){\r\n    //debugger;\r\n    this.setState({\r\n      spinner: control\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>Historic chart</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n          <IonContent className = \"chart-content\">\r\n              <IonLoading\r\n                isOpen={this.state.spinner}\r\n                onDidDismiss={() => this.setState({spinner:false})}\r\n                message={'Loading...'}\r\n                duration={2000}\r\n              />\r\n              {this.state.data ? this.state.data.datasets ?\r\n                  <Chart\r\n                    data={this.state.data}\r\n                    location=\"Madrid\"\r\n                    legendPosition=\"bottom\" \r\n                    handlerSpinner={this.handlerSpinner}\r\n                  />\r\n              :\r\n                  null : null\r\n              }\r\n          </IonContent>\r\n      </IonPage>\r\n    )\r\n  }\r\n}\r\nexport default HistoricPage;\r\n\r\n\r\n","import React from 'react';\r\nimport { IonIcon, IonMenu, IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonItem,  IonMenuToggle, IonLabel } from '@ionic/react';\r\nimport './Menu.css';\r\n\r\n\r\nclass Menu extends React.Component<any, any> {\r\n  constructor(props: any){\r\n    super(props);\r\n    this.state = {      \r\n      isLoggedIn: localStorage.getItem(\"isLogin\") ? localStorage.getItem(\"isLogin\") :\"false\",   \r\n      routes:  {\r\n        appPages: [\r\n          // { title: 'Home', path: '/', icon: 'home' },         \r\n        ],\r\n        loggedInPages: [\r\n          // { title: 'My Profile', path: '/profile/'+localStorage.getItem(\"username\"), icon: 'person'},        \r\n          { title: 'Ripple Road', path: '/rippleDiagram', icon: 'create' },\r\n          { title: 'Ripple List', path: '/ripple', icon: 'create'},\r\n          { title: 'Digitalization Grade', path: '/dgrade', icon: 'podium' },\r\n          // { title: 'Digitalization Evolution', path: '/historicalChart', icon: 'stats'},\r\n          { title: 'Logout', path: '/login', icon: 'log-out' },\r\n          // { title: 'Digitalization2', path: '/dgrade2', icon: 'stats'},\r\n\r\n\r\n        ],\r\n        loggedOutPages: [\r\n          { title: 'Login', path: '/login', icon: 'log-in' },\r\n        ]  }\r\n    }\r\n    window.addEventListener('loggedIn', (e: any) => {            \r\n      this.setState({\r\n        isLoggedIn : e['detail'].toString(),\r\n        routes : {\r\n          appPages: [\r\n            // { title: 'Home', path: '/', icon: 'home' },         \r\n          ],\r\n          loggedInPages: [\r\n            // { title: 'My Profile', path: '/profile/'+localStorage.getItem(\"username\"), icon: 'person'},        \r\n            { title: 'Ripple Road', path: '/rippleDiagram', icon: 'create' },\r\n            { title: 'Ripple List', path: '/ripple', icon: 'create'},\r\n            { title: 'Digitalization Grade', path: '/dgrade', icon: 'stats' },\r\n            // { title: 'Digitalization Evolution', path: '/historicalChart', icon: 'stats'},\r\n            { title: 'Logout', path: '/login', icon: 'log-out' },\r\n\r\n            \r\n          ],\r\n          loggedOutPages: [\r\n            { title: 'Login', path: '/login', icon: 'log-in' }, \r\n          ]  }        \r\n      })      \r\n \r\n    });  \r\n  } \r\n    \r\n   renderMenuItem(menu: any) {\r\n    return (\r\n         <IonMenuToggle key={menu.title} auto-hide=\"false\">\r\n                   <IonItem routerLink={menu.path}>\r\n                     <IonIcon name={menu.icon} ></IonIcon>\r\n                     <IonLabel className=\"sidemenu-link customLink\" >{menu.title}</IonLabel> \r\n                   </IonItem>\r\n                   </IonMenuToggle>\r\n      )\r\n  }\r\n  \r\n  render() {\r\n      return (  \r\n        <IonMenu side=\"start\" menuId=\"first\" contentId=\"main\" >\r\n          <IonHeader>\r\n            <IonToolbar>\r\n              <IonTitle>Menu</IonTitle>\r\n            </IonToolbar>\r\n          </IonHeader>\r\n          <IonContent class=\"customContent\">\r\n            <IonList>\r\n              {this.state.routes.appPages.map((art: any) => this.renderMenuItem(art))}\r\n              {this.state.isLoggedIn === \"true\" ? <> {this.state.routes.loggedInPages.map((art: any) =>\r\n                this.renderMenuItem(art))} </> :<> {this.state.routes.loggedOutPages.map((art: any) =>\r\n                this.renderMenuItem(art))} </> }\r\n            </IonList>\r\n            <div className=\"wrapper\">\r\n              <div className=\"wave\"></div>\r\n            </div>\r\n          </IonContent>\r\n        </IonMenu>\r\n      )\r\n  }\r\n}\r\nexport default Menu","import {\r\n  IonButtons,\r\n  IonContent,\r\n  IonHeader,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar  } from '@ionic/react';\r\nimport React from 'react';\r\nimport './Home.css';\r\nimport image from '../assets/images/logoNRM.png';\r\nimport videobgWebm from '../assets/video/loopWaves.webm';\r\n\r\nconst HomePage: React.FC = () => {\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>Home</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent >\r\n      <div className=\"backgrounddiv\">\r\n\r\n      <video autoPlay webkit-playsinline=\"true\" playsInline loop muted id=\"backgroundvideo\">\r\n        {/* <source src={videobgMp4} type='video/mp4; codecs=\"h.264\"'/> */}\r\n        <source src={videobgWebm} type=\"video/webm\"/>\r\n      </video>\r\n      <div className=\"ion-text-center\">\r\n        <img src={image} alt=\"logo\" width=\"50%\" className=\"centerAbsolute\"/> \r\n      </div>\r\n      </div>\r\n      </IonContent>\r\n      </IonPage> \r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import './Ripple.css'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n        IonPage, IonLabel, IonItem, IonList, IonHeader, IonToolbar, IonButtons, IonTitle, IonContent, IonItemDivider, IonSegment, IonSegmentButton, IonBackButton, IonInput, IonNote, IonProgressBar\r\n        } from '@ionic/react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport API from '../utils/httpUtils';\r\nimport { RippleInfo, TextDto } from '../declarations';\r\n\r\n\r\ntype Props = { props:any };\r\n\r\ntype RippleDetail = {\r\n    values:Array<any>\r\n}\r\n\r\ntype KeyAndValue = {\r\n    key : string,\r\n    value? : string,\r\n    numberValue? : number\r\n}\r\n\r\nconst RipplePage: React.FC<Props & RouteComponentProps<any>> = (Params) => {\r\n    const [data, setData] = useState<RippleInfo>();\r\n    const [selectedRippleId, setSelectedRippleId] = useState(Params.match.params.ripple);\r\n    \r\n\r\n    const SECTIONS:Array<string> = [\"AS-IS\",\"Solution\",\"Challenge\",\"Value\",\"Benefits\",\"Ripple Information\",\"Exponential Technologies\",\"Roles\", \"Numbers\", \"Complexity\", \"Project\"];\r\n    const [ionSelectedSegmentKey, setIonSelectedSegmentKey] = useState(\"part0\");\r\n    const myapi = new API(Params);\r\n\r\n\r\n    useEffect(() => {\r\n        setSelectedRippleId(Params.match.params.ripple);\r\n        myapi.doGet(\"/nrrm-ripple/ripple/findOne/\"+selectedRippleId).then(data => {\r\n          return setData(data);\r\n        });\r\n    },[]\r\n    );  \r\n\r\n    const getText=(key:string)=>{\r\n      if(!data)return;\r\n      let dd = data.texts.find((x:TextDto)=>x.type.toUpperCase().indexOf(key)!==-1 );\r\n      if(!!dd) return dd.text;\r\n      else return \"\"\r\n    }\r\n\r\n    const getRippleInfoItems=()=>{\r\n      let temp:Array<KeyAndValue> = [];\r\n      temp.push({key:\"Ripple Owner\",value:data.rippleOwner});\r\n      temp.push({key:\"Type of Solution\",value:data.type.rippleType});\r\n      temp.push({key:\"Type of Implementation\",value:data.implementationType.implementationType});\r\n      temp.push({key:\"Business Area\",value:data.businessArea.businessArea});\r\n      return temp;\r\n    }\r\n\r\n    const getNumbersItems=()=>{\r\n      let temp:Array<KeyAndValue> = [];\r\n      temp.push({key:\"P/L Impact Range (k€)\",value:data.plImpactRangeLower + \" - \" +data.plImpactRangeHigher});\r\n      temp.push({key:\"Cost Range (k€)\",value:data.costRangeLower + \" - \" +data.costRangeHigher});\r\n      temp.push({key:\"Time Range (weeks)\",value:data.timeRangeLower + \" - \" +data.timeRangeHigher});\r\n      return temp;\r\n    }\r\n\r\n    const getComplexityItems=()=>{\r\n      let temp:Array<KeyAndValue> = [];\r\n      temp.push({key:\"Complexity (\"+data.complexityPercentage+\"%)\",numberValue:parseFloat(data.complexityPercentage as any)/100});\r\n      temp.push({key:\"Business Impact (\"+data.impactPercentage+\"%)\",numberValue:parseFloat(data.impactPercentage as any)/100});\r\n      return temp;\r\n    }\r\n\r\n    const getProjectItems=()=>{\r\n      let temp:Array<KeyAndValue> = [];\r\n      temp.push({key:\"Responsable de ejecución (\"+data.complexityPercentage+\"%)\",numberValue:parseFloat(data.complexityPercentage as any)/100});\r\n      temp.push({key:\"Responsable de ejecución (\"+data.rippleOwner+\")\"});\r\n      temp.push({key:\"Progress Degree (\"+data.progressDegree+\")\"});\r\n      temp.push({key:\"Initial Date (\"+data.projectInitDate+\")\"});\r\n      temp.push({key:\"End Date (\"+data.projectEndDate+\")\"});\r\n      temp.push({key:\"Project Status (\"+data.projectStatus+\")\"});\r\n      temp.push({key:\"Project Risks (\"+data.projectRisks+\")\"});\r\n      // temp.push({key:\"Project Risks \", data.projectRisks});\r\n      return temp;\r\n    }\r\n\r\n    const getItemsForSection=(section:string)=>{\r\n     if (!data) return; \r\n\r\n      switch(section){\r\n        case \"AS-IS\":\r\n          return <IonItem key=\"asis0\" className=\"asis\"><IonInput disabled>{getText(\"AS-IS\")}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>;\r\n\r\n        case \"Solution\":\r\n          return <IonItem key=\"solution0\" className=\"solution\"><IonInput disabled>{getText(\"SOLUTION\")}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>;\r\n\r\n        case \"Challenge\":\r\n          return <IonItem key=\"challenge0\" className=\"challenge\"><IonInput disabled>{getText(\"CHALLENGE\")}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>;\r\n\r\n        case \"Value\":\r\n          return <IonItem key=\"value0\" className=\"value\"><IonInput disabled>{getText(\"VALUE\")}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>;\r\n\r\n        case \"Benefits\":\r\n          return <IonItem key=\"benefits0\" className=\"benefits\"><IonInput disabled>{getText(\"BENEFITS\")}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>;\r\n\r\n        case \"Ripple Information\":\r\n          return getRippleInfoItems().map((x,i)=>{\r\n            return (<IonItem key={\"ri\"+i} className=\"ri\"><IonLabel position=\"stacked\">{x.key}</IonLabel><IonInput disabled>{x.value}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>);\r\n          });\r\n\r\n        case \"Exponential Technologies\":\r\n          return data.technologiesInvolved.map((x,i)=>{\r\n            return <IonItem key={\"ti\"+i} className=\"ti\"><IonLabel position=\"stacked\">{x.technologiesType}</IonLabel><IonNote slot=\"end\"></IonNote></IonItem>;\r\n          });\r\n\r\n        case \"Roles\":\r\n          return data.rippleRoleables.map((x,i)=>{\r\n            return (<IonItem key={\"com\"+i} className=\"rr\"><IonLabel position=\"stacked\">{x.rol.rolType+\" (\"+x.percentage+\"%)\"}</IonLabel><IonProgressBar value={(x.percentage)/100}></IonProgressBar></IonItem>);\r\n          });\r\n\r\n        case \"Numbers\":\r\n          return getNumbersItems().map((x,i)=>{\r\n            return (<IonItem key={\"num\"+i} className=\"num\"><IonLabel position=\"stacked\">{x.key}</IonLabel><IonInput disabled>{x.value}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>);\r\n          });\r\n\r\n        case \"Complexity\":\r\n          return getComplexityItems().map((x,i)=>{\r\n            let color = (x.numberValue > 0.7) ? \"success\" : (x.numberValue > 0.4) ? \"warning\" : \"danger\";  \r\n            return (<IonItem key={\"com\"+i} className=\"ri\"><IonLabel position=\"stacked\">{x.key}</IonLabel><IonProgressBar value={x.numberValue} color={color}></IonProgressBar></IonItem>);\r\n          });\r\n          case \"Project\":\r\n          return getProjectItems().map((x,i)=>{\r\n            return (<IonItem key={\"proj\"+i} className=\"num\"><IonLabel position=\"stacked\">{x.key}</IonLabel><IonInput disabled>{x.value}</IonInput><IonNote slot=\"end\"></IonNote></IonItem>);\r\n          });\r\n\r\n      }\r\n    }\r\n    \r\n\r\n    return (\r\n      <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonBackButton  defaultHref=\"/ripple/\"/>\r\n                    </IonButtons>\r\n                    <IonTitle>{data ? data.name : \"\"}</IonTitle>\r\n                </IonToolbar>\r\n                <IonToolbar className=\"rippleSegmentCustom\">\r\n                    <IonSegment \r\n                      key=\"ionSegmentKey\" \r\n                      value={ionSelectedSegmentKey} \r\n                      className=\"rippleSegment\"\r\n                      onIonChange={e => {\r\n                      }}\r\n                      scrollable\r\n                    >\r\n                        { SECTIONS.map((x, i) => {\r\n                          let part = \"part\" + i;\r\n                          return <IonSegmentButton \r\n                            className={part}\r\n                            key={i} \r\n                            value={part} \r\n                            onClick={ e => {\r\n                              let content: HTMLIonContentElement = document.querySelector('ion-content.customContent22');\r\n                              let divider: HTMLObjectElement = document.querySelector(\"ion-item-divider.\" + e.currentTarget.getAttribute(\"VALUE\"));\r\n                              let parent: any = divider.offsetParent;\r\n                              if(content != null && divider != null)\r\n                                content.scrollToPoint(100, parent.offsetTop - divider.clientHeight, 1500);\r\n                            }}\r\n                          >\r\n                              <IonLabel key={i}>{x}</IonLabel>\r\n                          </IonSegmentButton>})\r\n                        }\r\n                    </IonSegment>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent\r\n              scrollEvents={true} \r\n              onIonScrollStart={() => {}}\r\n              onIonScroll={(e) => {\r\n                try {\r\n                  let y = e.detail.scrollTop;\r\n                  let lowerDistance = 0;\r\n                  let lowerDistanceElement = \"\";\r\n                  for(var i=0;i<SECTIONS.length;i++){\r\n                    let divider: HTMLObjectElement = document.querySelector(\"ion-item-divider.part\"+i);\r\n                    let parent: any = divider.offsetParent;\r\n                    let distance = y - parent.offsetTop;\r\n                    if(distance > 0) continue;\r\n                    if (lowerDistance === 0) {\r\n                      lowerDistance=distance;\r\n                      lowerDistanceElement = \"part\" + i;\r\n                    };\r\n                    if(lowerDistance > Math.abs(distance)) {\r\n                      lowerDistance = distance;\r\n                      lowerDistanceElement = \"part\" + i;\r\n                    };\r\n                  }\r\n                  setIonSelectedSegmentKey(lowerDistanceElement);\r\n                  let segmentButton:HTMLIonContentElement = document.querySelector('ion-segment.rippleSegment');\r\n                  let segmentButtonSelected:HTMLIonContentElement = document.querySelector('ion-segment-button.'+lowerDistanceElement);\r\n                  segmentButton.scrollTo(segmentButtonSelected.offsetLeft,0);\r\n                  console.log(lowerDistanceElement)\r\n                } catch (error) {\r\n                  console.log(error);\r\n                }\r\n              }}\r\n              onIonScrollEnd={() => {}}\r\n              className=\"customContent22 rippleDetail\"\r\n            >\r\n              { SECTIONS.map((x,i) => {\r\n                  let items = getItemsForSection(x);\r\n                  let part=\"part\"+i;\r\n                  return <IonList key={part+\"list\"} >\r\n                    <IonItemDivider sticky key={part} className={part}>{x}</IonItemDivider>\r\n                    {items}\r\n                  </IonList>;\r\n              })}            \r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\nexport default RipplePage;","import React , { useState }  from \"react\";\r\nimport './RippleRoadDiagram.css'\r\nimport * as Treeviz from 'treeviz';\r\nimport { RippleDiagramNode } from \"../declarations\";\r\nimport { IonPopover, IonButton } from '@ionic/react';\r\n// import { PropTypes } from 'react';\r\n\r\ntype State = {\r\n  data: Array<RippleDiagramNode>, \r\n  border: any, \r\n  color: any,\r\n  \r\n};\r\n\r\nclass RippleRoadDiagram extends React.Component<any,State>{\r\n\r\n  \r\n  ref:any;\r\n  myTree:any;\r\n  allData:Array<RippleDiagramNode>;\r\n  tmpData:Array<RippleDiagramNode>;\r\n  maxLevels: number = 0;\r\n  ev:any;\r\n  nodeValue:any;\r\n  selectedNode: RippleDiagramNode;\r\n  nodeData: number;\r\n\r\n\r\n\r\n  constructor(props:any){\r\n    super(props);\r\n    //this.ref = useRef(null);\r\n    this.getNodeTemplate = this.getNodeTemplate.bind(this);\r\n    // console.debug(\"constructor\");\r\n    // debugger;\r\n    this.state = {\r\n      data: props.data,\r\n      border: props.getBorderFromParent,\r\n      color: props.getColorFromParent,\r\n      \r\n    };\r\n    \r\n    if(this.state.data){\r\n        this.allData = this.state.data.slice();\r\n        this.tmpData = this.state.data.slice();\r\n    }\r\n    this.ref = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.debug(\"componentDidMount::Height:\"+this.ref.current.clientHeight+\" width:\"+this.ref.current.clientWidth);\r\n    setTimeout(() => {\r\n      console.debug(\"Height:\"+this.ref.current.clientHeight+\" width:\"+this.ref.current.clientHeight);\r\n      if(this.ref.current.clientHeight+this.ref.current.clientHeight>0){\r\n        this.paintDiagram();\r\n      }\r\n    }, 1000);\r\n  }\r\n  \r\n  getNodeTemplate(node:any){\r\n    let border = this.props.getBorderFromParent(node.data.type);\r\n    let color = this.props.getColorFromParent(node.data.type);\r\n    \r\n    return `<div \r\n              class='nodeBox' \r\n              style='cursor:pointer;\r\n              height:${node.settings.nodeHeight}px; \r\n              width:${node.settings.nodeWidth}px;\r\n              display:flex;\r\n              flex-direction:column;\r\n              justify-content:center;\r\n              align-items:center;\r\n              border-color:${node.data.isSelected ? 'gray' : border};\r\n              border-width: ${node.data.isSelected ? '5px' : '1px'};\r\n              background-color:${color};\r\n              ${(node.data.highlighted)?\"box-shadow: 0px 0px 20px 9px \"+border+\";\":\"box-shadow:none;\"}\r\n              border-radius:20px;'>\r\n                <div style='border-left:2px;border-color:red;width:150px'>\r\n                  <div style='margin-bottom:100px;text-align: center;'>${node.data.name} </div>\r\n                </div>\r\n            </div>`;\r\n  }\r\n\r\n\r\n  // border-color:${node.data.hasChildren && !node.data.isOpened && !node.children ? 'gray' : border};\r\n  // border-width: ${node.data.hasChildren && !node.data.isOpened && !node.children ? '5px' : '1px'};\r\n\r\n  paintDiagram () {\r\n    this.myTree = Treeviz.create({\r\n      htmlId: this.ref.current.id,\r\n      idKey: \"id\",\r\n      hasFlatData: true,\r\n      relationnalField: \"father\",\r\n      hasZoom: true,\r\n      hasPan:true,\r\n      nodeWidth:20,\r\n      nodeHeight:20,\r\n      marginLeft:20,\r\n      marginRight:20,\r\n      marginTop:0,\r\n      marginBottom:0,\r\n      mainAxisNodeSpacing:\"auto\",\r\n      secondaryAxisNodeSpacing:1,\r\n      isHorizontal:true,\r\n      renderNode: (node) => this.getNodeTemplate(node),\r\n      linkWidth: (nodeData) => 1,\r\n      linkShape: \"curve\",\r\n      linkColor: (nodeData) => \"#B0BEC5\" ,\r\n      onNodeClick: (nodeData) => {\r\n        if(this.findIfShowingChildren(nodeData.data.id)){\r\n          // close\r\n          let nArray = this.removeChildrenFromParent(nodeData.data.id);\r\n          let obj=nArray.find((a)=>a.id===nodeData.data.id);\r\n          obj.isOpened=false;\r\n          this.tmpData=nArray;\r\n          // this.myTree.refresh(this.tmpData);\r\n          \r\n        }else{\r\n          // open\r\n          let nArray = this.addChildrenFromParent(nodeData.data.id);\r\n          this.tmpData=this.tmpData.concat(nArray);\r\n          let obj=this.tmpData.find((a)=>a.id===nodeData.data.id);\r\n          obj.isOpened=true;\r\n          this.tmpData.sort(function(a,b){ return a.id - b.id; });\r\n          // this.myTree.refresh(this.tmpData);\r\n        }\r\n        this.setSelectedNode(nodeData.data.id);\r\n        this.myTree.refresh(this.tmpData);\r\n      }\r\n    });\r\n    this.updateData();\r\n  }\r\n\r\n\r\n  setSelectedNode(nodeId: number) {\r\n    let node = this.tmpData.find((a)=>a.id === nodeId);\r\n    this.allData.forEach((node) => {\r\n      node.isSelected = false;\r\n    });\r\n    node.isSelected = true;\r\n    this.selectedNode = node;\r\n    this.sendData();\r\n\r\n  }\r\n\r\n  sendData() {\r\n    this.props.parentCallback(this.selectedNode);\r\n}\r\n  \r\n  findIfShowingChildren(nodeId:number){\r\n    let children = this.tmpData.filter((el)=>el.father===nodeId);\r\n    return children.length>0;\r\n  }\r\n\r\n  getIndicesFromChildrenForRemove(nodeId:number){\r\n    let tmpData = this.tmpData.slice();\r\n    let children = tmpData.filter((el) => el.father === nodeId);\r\n    let indices:Array<number> = [];\r\n    children.forEach((node) => {\r\n      indices.push(tmpData.findIndex((a) => a.id === node.id));\r\n      if (indices && indices.length>0) {\r\n        indices = indices.concat(this.getIndicesFromChildrenForRemove(node.id));\r\n      }\r\n    });\r\n    return indices;\r\n  }\r\n\r\n  getIndicesFromChildren(nodeId:number){\r\n    let tmpData = this.allData.slice();\r\n    let children = tmpData.filter((el) => el.father === nodeId);\r\n    let indices:Array<number> = [];\r\n    children.forEach((node)=>{\r\n      indices.push(tmpData.findIndex((a)=>a.id===node.id));\r\n      if (indices && indices.length>0) {\r\n        indices=indices.concat(this.getIndicesFromChildren(node.id));\r\n      }\r\n    });\r\n    return indices;\r\n  }\r\n\r\n  addChildrenFromParent(nodeId:number){\r\n    let tmpData:Array<RippleDiagramNode> = []; \r\n    let toAdd = this.getIndicesFromChildren(nodeId);\r\n    for (var i = toAdd.length -1; i >= 0; i--) {\r\n      tmpData.push(this.allData[toAdd[i]]);\r\n    }\r\n    return tmpData;\r\n  }\r\n\r\n  removeChildrenFromParent(nodeId:number){   \r\n    let tmpData = this.tmpData.slice(); \r\n    let toRemove = this.getIndicesFromChildrenForRemove(nodeId);\r\n    toRemove.sort(function(a,b){ return b - a; });\r\n    for (var i = 0; i < toRemove.length ; i++) {\r\n      tmpData.splice(toRemove[i],1);\r\n    }\r\n    return tmpData;\r\n  }\r\n\r\n  updateData(){\r\n    if(!this.myTree || !this.state.data) return;\r\n    // Display the tree based on the data\r\n    this.myTree.refresh(this.state.data);\r\n  }\r\n\r\n  componentDidUpdate(prevProps:any, prevState:any){\r\n    console.debug(\"componentDidUpdate::Height:\"+this.ref.current.clientHeight+\" width:\"+this.ref.current.clientWidth);\r\n    if(prevState.data!== this.props.data){\r\n      if (this.props.data) {\r\n        this.setState({\r\n          data: this.props.data\r\n        });\r\n      }\r\n      if(this.state.data){\r\n        this.allData = this.state.data.slice();\r\n        this.tmpData = this.state.data.slice();\r\n      }\r\n    }\r\n    if(this.ref.current.clientHeight+this.ref.current.clientHeight>0){\r\n      this.updateData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.ref} id=\"tree\" style={{\r\n        width: this.props.maxLevels > 0 ? (this.props.maxLevels * 200) + 'px' : '90%',\r\n        margin: this.props.maxLevels * 200 > window.innerWidth ? '0 5%' : '0 auto'\r\n      }}>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default RippleRoadDiagram;\r\n","import './RippleDiagram.css'\r\nimport './RippleDiagramAnims.css'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n        IonPage, IonLabel, IonItem, IonList, IonHeader, IonToolbar, IonButtons, IonTitle, IonContent, IonIcon, IonLoading, IonCol, IonRow, IonFab, IonFabButton, IonMenuButton, IonFabList, IonModal, IonButton, IonChip\r\n        } from '@ionic/react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport API from '../utils/httpUtils';\r\nimport  RippleRoadDiagram  from \"../components/RippleRoadDiagram\";\r\nimport { RippleDiagramNode, Filter, searchableRippleInfo, FilterAux } from '../declarations';\r\nimport {  funnel, business, desktop, trophy, informationCircle } from 'ionicons/icons';\r\nimport {getColorForType} from '../theme/colorfcns';\r\n\r\ntype Props = { props:any };\r\n\r\ntype RippleDetail = {\r\n    values:Array<any>\r\n}\r\n\r\ntype KeyAndValue = {\r\n    key : string,\r\n    value? : string,\r\n    numberValue? : number\r\n}\r\n\r\nconst RippleDiagramPage: React.FC<Props & RouteComponentProps<any>> = (Params) => {\r\n    \r\n  const myapi = new API(Params);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [animate, setAnimate] = useState(false);\r\n  const [aFilters, setFilters] = useState([]);\r\n  const [aImplementationTypes, setImplementationTypes] = useState([]);\r\n  const [aTypes, setTypes] = useState([]);\r\n  const [aBusinessAreas, setBusinessAreas] = useState([]);\r\n  const [showModalImplementationType, setShowModalImplementationType] = useState(false);\r\n  const [showModalType, setShowModalType] = useState(false);\r\n  const [showModalBusinessArea, setShowModalBusinessArea] = useState(false);\r\n  const [selectedNodeData, setSelectedNodeData] = useState<any>(null);\r\n  let [nonRepeatedValues, setNonRepeatValues] = useState([]);\r\n  let [maxLevels, setMaxLevels] = useState<number>(0);\r\n  let auxMaxLevels: number = 0;\r\n  let trackLevels: number = 0;\r\n\r\n  const [data, setData] = useState<Array<RippleDiagramNode>>(null);\r\n  const [originData, setOriginData] = useState<Array<any>>(null);\r\n\r\n    const loadData=()=>{\r\n      setShowLoading(true);\r\n      myapi.doGet(\"/nrrm-ripple/ripple?email=\" + localStorage.getItem('email')).then(data => {\r\n        setShowLoading(false);\r\n        setFilterData(data);\r\n        setOriginData(data);\r\n        return flatterDataSet(data);\r\n      });\r\n    }\r\n\r\n    const callbackFunction = (nodeData:any) => {\r\n      let selectedData = null;\r\n      selectedData = originData.find(node => node.id === nodeData.id);\r\n      setSelectedNodeData(selectedData);\r\n     \r\n}\r\n\r\n    const setFilterData=(data: searchableRippleInfo[])=>{\r\n      if(!data) return setData([]); \r\n        let aImp:Array<Filter>=[];\r\n        let aTypes:Array<FilterAux>=[];\r\n        let aBusinessAreas:Array<Filter>=[];\r\n        \r\n        data.forEach( (element:searchableRippleInfo) => {\r\n          aImp.push({key:element.implementationType.uuid,value:element.implementationType.implementationType,type:0});\r\n          aTypes.push({key:element.type.uuid,value:element.type.rippleType,type:1, typeColor:element.type.id});\r\n          aBusinessAreas.push({key:element.businessArea.uuid,value:element.businessArea.businessArea,type:2});\r\n          setNonRepeatValues (Array.from(new Set(aTypes.map(a => a.key)))\r\n          .map(id => {\r\n            return aTypes.find(a => a.key === id)\r\n          }));\r\n        });\r\n        setImplementationTypes(uniqueValues(aImp));\r\n        setTypes(uniqueValues(aTypes));\r\n        setBusinessAreas(uniqueValues(aBusinessAreas));\r\n    }\r\n\r\n    const uniqueValues=(aArray:Array<any>)=>{\r\n      return aArray.filter((thing, index, self) => self.findIndex(t => t.place === thing.place && t.key === thing.key) === index);\r\n    }\r\n\r\n    const loadAdvancedFilteredData=()=>{\r\n        setShowLoading(true);\r\n        if(!data)return;\r\n        ////debugger;\r\n        data.forEach((singleData)=>{\r\n          if(aFilters.length===0) {\r\n            singleData.highlighted=false;\r\n            return;\r\n          }\r\n          aFilters.forEach((filter:Filter)=>{\r\n            if( filter.type === 0  && singleData.implementationTypeUUID === filter.key) { //implementation type\r\n              singleData.highlighted = true;\r\n            }else if ( filter.type === 1 && singleData.typeUUID === filter.key){ // Type\r\n              singleData.highlighted = true;\r\n            }else if ( filter.type === 2 && singleData.businessAreaUUID === filter.key){ // businessArea\r\n              singleData.highlighted = true;\r\n            }else{\r\n              singleData.highlighted=false;\r\n            }\r\n            \r\n          });\r\n        });\r\n        setData(data);\r\n        setShowLoading(false);\r\n        return ;\r\n\r\n\r\n    }\r\n\r\n    const resetFilter = (selectedFilter:Filter)=>{\r\n    \r\n      aFilters.splice(aFilters.indexOf(selectedFilter),1);\r\n      let tmp=aFilters.slice();\r\n      setFilters(tmp);\r\n      loadAdvancedFilteredData();\r\n    };\r\n  \r\n    const addFilters = (selectedFilter:Filter)=>{\r\n      \r\n      if(aFilters.indexOf(selectedFilter)===-1){\r\n        aFilters.push(selectedFilter);\r\n        setFilters(aFilters);\r\n        loadAdvancedFilteredData();\r\n      }\r\n      \r\n    };\r\n\r\n    const flatterDataSet = (data:Array<searchableRippleInfo>)=>{\r\n      if(!data) return;\r\n      let flatData:Array<RippleDiagramNode> = [\r\n        {\r\n          id:0,\r\n          name:\"Inicio\",\r\n          smallDescription:\"\",\r\n          father:undefined,\r\n          type:0,\r\n          isOpened:true,\r\n          hasChildren: true,\r\n          highlighted : false,\r\n          typeUUID:\"\",\r\n          implementationTypeUUID:\"\",\r\n          isSelected: false,\r\n          businessAreaUUID:\"\"\r\n        }\r\n      ];\r\n      for(let i = 0; i < data.length; i++){\r\n        flatData.push({\r\n          id:data[i].id,\r\n          name:data[i].name,\r\n          smallDescription:data[i].smallDescription,\r\n          father: (data[i].predecessor) ? data[i].predecessor.id : 0,\r\n          type: (data[i].type)?data[i].type.id : 0,\r\n          isOpened:true,\r\n          hasChildren: data[i].successor.length > 0 ? true : false,\r\n          highlighted: data[i].selected,\r\n          typeUUID:data[i].type.uuid,\r\n          implementationTypeUUID:data[i].implementationType.uuid,\r\n          isSelected: false,\r\n          businessAreaUUID:data[i].businessArea.uuid\r\n        });\r\n      }\r\n\r\n\r\n      let lastChildren = data.filter(node => node.successor.length === 0);\r\n      lastChildren.forEach((node) => {\r\n        let levels = 0;\r\n        levels = trackPredecessor(node, data);\r\n        if (trackLevels === 0) {\r\n          auxMaxLevels = trackLevels;\r\n        }\r\n        else {\r\n          if (trackLevels > auxMaxLevels) {\r\n            auxMaxLevels = trackLevels;\r\n          }\r\n        }\r\n        trackLevels = 0;\r\n      });\r\n      auxMaxLevels++;\r\n      setMaxLevels(auxMaxLevels);\r\n      setData(flatData.sort((a,b)=>a.id-b.id));\r\n    }\r\n\r\n    function trackPredecessor(node: searchableRippleInfo, data: Array<searchableRippleInfo>): number {\r\n      if (node.predecessor === null) {\r\n        trackLevels++;\r\n        return trackLevels\r\n      }\r\n      else {\r\n        trackLevels++;\r\n        trackPredecessor(data.find(item => item.uuid === node.predecessor.uuid), data);\r\n      }\r\n    }\r\n\r\n    const onClickNode = (node : RippleDiagramNode)=>{\r\n      setAnimate(!animate);\r\n    }\r\n      \r\n    useEffect(() => {\r\n      loadData();\r\n    }, []);  \r\n\r\n    return (\r\n        <IonPage>\r\n          \r\n          <IonHeader>\r\n            \r\n            <IonToolbar>\r\n              <IonButtons slot=\"start\">\r\n                <IonMenuButton />\r\n              </IonButtons>\r\n              <IonTitle>Ripple Road Diagram</IonTitle>\r\n            </IonToolbar>\r\n\r\n          </IonHeader>\r\n          <IonContent>\r\n\r\n            <div className=\"chips-wrapper\">\r\n              {aFilters.map((a) => {\r\n                return <IonChip onClick={()=>{resetFilter(a);}}>\r\n                  <IonLabel>{a.value}</IonLabel>\r\n                  <IonIcon name=\"close-circle\" />\r\n                </IonChip>\r\n              })}\r\n            </div>\r\n            <IonLoading\r\n              isOpen={showLoading}\r\n              onDidDismiss={() => setShowLoading(false)}\r\n              message={'Loading...'}\r\n              duration={3000}\r\n            />\r\n            <div className=\"ripple-diagram-wrapper\">\r\n              <RippleRoadDiagram \r\n                onClickNode={(a:RippleDiagramNode) => onClickNode(a)}\r\n                data={data} \r\n                getColorFromParent = {getColorForType.bind(null)} \r\n                getBorderFromParent = {getColorForType.bind(null)}\r\n                maxLevels = {maxLevels}\r\n                parentCallback = {callbackFunction.bind(null)}\r\n                \r\n              />\r\n            </div>\r\n            <div className=\"legend\">\r\n              \r\n              {nonRepeatedValues.map((element, index) => {\r\n                return <IonRow>\r\n                  <IonCol size=\"auto\">\r\n                    <div  className='legend__item' style={{backgroundColor: getColorForType(element.typeColor), borderColor:getColorForType(element.typeColor) }}></div>\r\n                  </IonCol>\r\n                  <IonCol size=\"auto\">\r\n                    <span>{element.value}</span> \r\n                  </IonCol>\r\n                </IonRow>\r\n              })}\r\n            </div>\r\n            <div className=\"customStackedButtons\">\r\n            {selectedNodeData !=null ?\r\n                <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" >\r\n                  <IonFabButton routerLink={\"/ripple/\" + selectedNodeData.uuid}>\r\n                    <IonIcon icon={informationCircle} color=\"light\"/>\r\n                  </IonFabButton> \r\n                </IonFab> \r\n                :\r\n                null\r\n              }\r\n\r\n              <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" className=\"secondaryFab\" >\r\n                <IonFabButton color=\"secondary\">\r\n                  <IonIcon icon={funnel} color=\"light\"/>\r\n                </IonFabButton> \r\n                <IonFabList side=\"top\">\r\n                  <IonFabButton title=\"Implementation Type\" onClick={(e)=>{setShowModalImplementationType(true);}}>\r\n                    <IonIcon icon={trophy} />\r\n                  </IonFabButton>\r\n                  <IonFabButton title=\"Solution Type\" onClick={(e)=>{setShowModalType(true);}}>\r\n                    <IonIcon icon={desktop} />\r\n                  </IonFabButton>\r\n                  <IonFabButton title=\"Business Area\" onClick={(e)=>{setShowModalBusinessArea(true);}}>\r\n                    <IonIcon icon={business} />\r\n                  </IonFabButton>\r\n                </IonFabList>\r\n              </IonFab>\r\n            </div>\r\n            <IonModal isOpen={showModalImplementationType}>\r\n              <IonList>\r\n                {aImplementationTypes.map((a) => \r\n                  <IonItem key={a.key} onClick={(e) => {\r\n                    addFilters(a);\r\n                    setShowModalImplementationType(false);\r\n                  }}>\r\n                    {a.value}\r\n                  </IonItem>\r\n                )}\r\n              </IonList>\r\n              <IonButton onClick={() => setShowModalImplementationType(false)}>Cerrar</IonButton>\r\n            </IonModal>\r\n\r\n            <IonModal isOpen={showModalType}>\r\n              <IonList>\r\n                {aTypes.map((a) =>\r\n                  <IonItem key={a.key} onClick={(e)=>{\r\n                    addFilters(a);\r\n                    setShowModalType(false);\r\n                  }}>\r\n                    {a.value}\r\n                  </IonItem>\r\n                )}\r\n              </IonList>\r\n              <IonButton onClick={() => setShowModalType(false)}>Cerrar</IonButton>\r\n            </IonModal>\r\n\r\n            <IonModal isOpen={showModalBusinessArea}>\r\n              <IonList>\r\n                {aBusinessAreas.map((a) =>\r\n                  <IonItem key={a.key} onClick={(e)=>{\r\n                    addFilters(a);\r\n                    setShowModalBusinessArea(false);\r\n                  }}>\r\n                    {a.value}\r\n                  </IonItem>\r\n                )}\r\n              </IonList>\r\n              <IonButton onClick={() => setShowModalBusinessArea(false)}>Cerrar</IonButton>\r\n            </IonModal>\r\n\r\n          </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default RippleDiagramPage;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\n\r\nimport LoginPage from './pages/Login';\r\nimport RippleList from './pages/Ripples';\r\nimport DigitalizationPage from './pages/Digitalization';\r\nimport Digitalization2 from './pages/Digitalization2'\r\nimport HistoricPage from './pages/HistoricPage';\r\n\r\n\r\n\r\n\r\nimport Menu from './components/Menu';\r\nimport Home from './pages/Home';\r\nimport RipplePage from './pages/Ripple';\r\nimport RippleDiagramPage from './pages/RippleDiagram';\r\n\r\n\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n  return (\r\n  <IonApp>\r\n    <IonReactRouter>\r\n      <IonSplitPane contentId=\"main\" when=\"false\">\r\n        <Menu/>\r\n          <IonRouterOutlet id=\"main\" >\r\n            \r\n            <Route path=\"/\"  component={Home} exact={true} />\r\n            <Route exact path=\"/login\" component={LoginPage} /> \r\n            <Route exact path=\"/ripple/\" component={RippleList} />\r\n            <Route path=\"/ripple/:ripple\" component={RipplePage} />\r\n            <Route path=\"/rippleDiagram\" component={RippleDiagramPage} />\r\n            <Route path=\"/dgrade\" component={DigitalizationPage} />\r\n            <Route path=\"/dgrade2\" component={Digitalization2} />\r\n            <Route path=\"/historicalChart\" component={HistoricPage} />\r\n            <Redirect exact from=\"/\" to=\"/login\"></Redirect>\r\n          </IonRouterOutlet>\r\n      </IonSplitPane>\r\n    </IonReactRouter>\r\n  </IonApp>\r\n)};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logoNRM.941dff3e.png\";","module.exports = __webpack_public_path__ + \"static/media/loopWaves.cdac9594.webm\";"],"sourceRoot":""}